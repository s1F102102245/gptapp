{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      newCategory: '',\n      categories: [],\n      newTask: {}\n    };\n  },\n  methods: {\n    addCategory() {\n      if (this.newCategory.trim() !== '') {\n        this.categories.push({\n          name: this.newCategory,\n          tasks: []\n        });\n        this.newCategory = '';\n      }\n    },\n    deleteCategory(index) {\n      this.categories.splice(index, 1);\n    },\n    toggleTaskCompletion(task) {\n      axios.put(`http://localhost:8000/api/tasks/${task.id}/`, {\n        completed: !task.completed\n      }).then(response => {\n        task.completed = response.data.completed;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    onTaskOrderChange(newOrder) {\n      this.tasks = newOrder;\n    },\n    addTask(categoryName) {\n      const category = this.categories.find(cat => cat.name === categoryName);\n      if (category) {\n        if (this.newTask[categoryName].trim() !== '') {\n          category.tasks.push({\n            title: this.newTask[categoryName],\n            completed: false,\n            style: {}\n          });\n          this.newTask[categoryName] = '';\n        }\n      }\n    },\n    deleteTask(category, taskIndex) {\n      if (category && taskIndex >= 0 && taskIndex < category.tasks.length) {\n        // カテゴリ内でタスクを削除\n        category.tasks.splice(taskIndex, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","newCategory","categories","newTask","methods","addCategory","trim","push","name","tasks","deleteCategory","index","splice","toggleTaskCompletion","task","put","id","completed","then","response","catch","error","console","onTaskOrderChange","newOrder","addTask","categoryName","category","find","cat","title","style","deleteTask","taskIndex","length"],"sources":["C:\\Users\\iniad\\Documents\\gptapp\\frontend\\src\\App.vue"],"sourcesContent":["<!-- eslint-disable-next-line vue/no-unused-vars -->\n\n<template>\n  <div id=\"app\">\n    <header>\n      <h1 style=\"color: black;\">Task Management App</h1>\n    </header>\n    <main>\n      <section class=\"sidebar\">\n        <h2>Categories</h2>\n        <ul>\n          <!-- eslint-disable-next-line vue/no-unused-vars -->\n          <li v-for=\"(category, index) in categories\" :key=\"index\">\n            <div class=\"category\">\n              <input v-model=\"category.name\" />\n              <button @click=\"deleteCategory(index)\">Delete</button>\n            </div>\n          </li>\n        </ul>\n        <div class=\"add-category\">\n          <input v-model=\"newCategory\" @keyup.enter=\"addCategory\" placeholder=\"Add Category\" />\n        </div>\n      </section>\n      <section class=\"task-list\">\n        <div class=\"category-tasks\" v-for=\"(category, index) in categories\" :key=\"index\">\n          <h2>{{ category.name }} Tasks</h2>\n          <vue-draggable-next v-model=\"category.tasks\" @update=\"onTaskOrderChange\">\n            <ul>\n              <li v-for=\"(task, taskIndex) in category.tasks\" :key=\"task.id\" :style=\"task.style\">\n                <div class=\"task-item\">\n                  <input type=\"checkbox\" v-model=\"task.completed\" @change=\"toggleTaskCompletion(category, task)\" />\n                  <label>{{ task.title }}</label>\n                  <button class=\"delete-button\" @click=\"deleteTask(category, taskIndex)\">×</button>\n                </div>\n              </li>\n            </ul>\n        <div class=\"add-task\">\n          <input v-model=\"newTask[category.name]\" @keyup.enter=\"addTask(category.name)\" placeholder=\"Add Task\" />\n        </div>\n      </vue-draggable-next>\n    </div>\n  </section>\n  </main>\n    <footer>\n      <h3>INIAD@group16-team4</h3>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      newCategory: '',\n      categories: [],\n      newTask: {},\n    };\n  },\n  methods: {\n    addCategory() {\n      if (this.newCategory.trim() !== '') {\n        this.categories.push({ name: this.newCategory, tasks: [] });\n        this.newCategory = '';\n      }\n    },\n    deleteCategory(index) {\n      this.categories.splice(index, 1);\n    },\n    toggleTaskCompletion(task) {\n      axios.put(`http://localhost:8000/api/tasks/${task.id}/`, { completed: !task.completed })\n        .then(response => {\n          task.completed = response.data.completed;\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    onTaskOrderChange(newOrder) {\n      this.tasks = newOrder;\n    },\n    addTask(categoryName) {\n      const category = this.categories.find((cat) => cat.name === categoryName);\n      if (category) {\n        if (this.newTask[categoryName].trim() !== '') {\n          category.tasks.push({\n            title: this.newTask[categoryName],\n            completed: false,\n            style: {},\n          });\n          this.newTask[categoryName] = '';\n        }\n      }\n    },\n    deleteTask(category, taskIndex) {\n      if (category && taskIndex >= 0 && taskIndex < category.tasks.length) {\n        // カテゴリ内でタスクを削除\n        category.tasks.splice(taskIndex, 1);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  font-family: 'Helvetica Neue', sans-serif;\n  text-align: center;\n  color: #333;\n  padding: 20px;\n  background-color: #8db4d6; /* くすみがかった水色 */\n  min-height: 100vh; /* 画面全体に背景色を広げるため */\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  background-color: rgba(255, 255, 255, 0.8);\n  padding: 20px;\n  color: black;\n  text-align: left; /* テキストを左寄せにする */\n}\n\n.app-title {\n  margin: 0;\n  font-size: 24px;\n}\n\nmain {\n  flex-grow: 1; /* メインコンテンツを伸ばして画面いっぱいに広げる */\n  display: flex;\n  background-color: white;\n}\n\n.sidebar {\n  width: 200px;\n  padding: 20px;\n  background-color: #f0f0f0; /* サイドバーの背景色 */\n  text-align: left; /* テキストを左寄せにする */\n}\n\n.sidebar h2 {\n  margin-bottom: 10px;\n}\n\n.sidebar ul {\n  list-style: none;\n  padding: 0;\n}\n\n.sidebar li {\n  margin-bottom: 10px;\n}\n\n.sidebar button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.task-list {\n  flex-grow: 1;\n  padding: 20px;\n  overflow-y: auto; /* タスクリストが大きくなった場合にスクロールできるようにする */\n}\n\n.task-list ul {\n  list-style: none;\n  padding: 0;\n}\n\n.task-item {\n  display: inline-block;\n  margin: 10px;\n  padding: 10px;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 5px;\n  transition: transform 0.4s ease-in-out;\n}\n\ninput[type=\"checkbox\"] {\n  margin-right: 10px;\n  transform: scale(1.5);\n  transition: transform 0.4s ease-in-out; /* アニメーションを追加 */\n}\n\nlabel {\n  font-size: 18px;\n  flex-grow: 1;\n}\n\n.delete-button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 18px;\n  color: #ff0000; /* ボタンの色を赤に変更 */\n  margin-left: 10px; /* ボタンの左側に余白を追加 */\n}\n\nfooter {\n  background-color: white;\n  padding: 10px 0;\n  text-align: center;\n}\n\nfooter h3 {\n  margin: 0;\n  font-size: 18px;\n}\n</style>\n"],"mappings":";AAkDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,CAAC;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACJ,WAAW,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;QAClC,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAC;UAAEC,IAAI,EAAE,IAAI,CAACP,WAAW;UAAEQ,KAAK,EAAE;QAAG,CAAC,CAAC;QAC3D,IAAI,CAACR,WAAU,GAAI,EAAE;MACvB;IACF,CAAC;IACDS,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACT,UAAU,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAClC,CAAC;IACDE,oBAAoBA,CAACC,IAAI,EAAE;MACzBf,KAAK,CAACgB,GAAG,CAAE,mCAAkCD,IAAI,CAACE,EAAG,GAAE,EAAE;QAAEC,SAAS,EAAE,CAACH,IAAI,CAACG;MAAU,CAAC,EACpFC,IAAI,CAACC,QAAO,IAAK;QAChBL,IAAI,CAACG,SAAQ,GAAIE,QAAQ,CAACnB,IAAI,CAACiB,SAAS;MAC1C,CAAC,EACAG,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACDE,iBAAiBA,CAACC,QAAQ,EAAE;MAC1B,IAAI,CAACf,KAAI,GAAIe,QAAQ;IACvB,CAAC;IACDC,OAAOA,CAACC,YAAY,EAAE;MACpB,MAAMC,QAAO,GAAI,IAAI,CAACzB,UAAU,CAAC0B,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACrB,IAAG,KAAMkB,YAAY,CAAC;MACzE,IAAIC,QAAQ,EAAE;QACZ,IAAI,IAAI,CAACxB,OAAO,CAACuB,YAAY,CAAC,CAACpB,IAAI,CAAC,MAAM,EAAE,EAAE;UAC5CqB,QAAQ,CAAClB,KAAK,CAACF,IAAI,CAAC;YAClBuB,KAAK,EAAE,IAAI,CAAC3B,OAAO,CAACuB,YAAY,CAAC;YACjCT,SAAS,EAAE,KAAK;YAChBc,KAAK,EAAE,CAAC;UACV,CAAC,CAAC;UACF,IAAI,CAAC5B,OAAO,CAACuB,YAAY,IAAI,EAAE;QACjC;MACF;IACF,CAAC;IACDM,UAAUA,CAACL,QAAQ,EAAEM,SAAS,EAAE;MAC9B,IAAIN,QAAO,IAAKM,SAAQ,IAAK,KAAKA,SAAQ,GAAIN,QAAQ,CAAClB,KAAK,CAACyB,MAAM,EAAE;QACnE;QACAP,QAAQ,CAAClB,KAAK,CAACG,MAAM,CAACqB,SAAS,EAAE,CAAC,CAAC;MACrC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}