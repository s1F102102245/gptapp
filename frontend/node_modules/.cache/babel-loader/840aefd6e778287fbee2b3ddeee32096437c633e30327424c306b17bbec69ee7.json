{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Todoアプリ\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTask = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTask && $options.addTask(...args), [\"enter\"])),\n    placeholder: \"新しいタスクを追加\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.newTask]]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.completed = $event\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelCheckbox, task.completed]]), _createTextVNode(\" \" + _toDisplayString(task.text), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$data","newTask","$event","onKeyup","_cache","_withKeys","args","$options","addTask","placeholder","_Fragment","_renderList","tasks","task","key","type","completed","_toDisplayString","text"],"sources":["C:\\Users\\iniad\\Documents\\GitHub\\gptapp\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Todoアプリ</h1>\n    <input v-model=\"newTask\" @keyup.enter=\"addTask\" placeholder=\"新しいタスクを追加\" />\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.id\">\n        <input type=\"checkbox\" v-model=\"task.completed\" />\n        {{ task.text }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newTask: \"\",\n      tasks: [],\n    };\n  },\n  methods: {\n    addTask() {\n      this.tasks.push({ id: Date.now(), text: this.newTask, completed: false });\n      this.newTask = \"\";\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAAgB,YAAZ,SAAO;;;uBADbC,mBAAA,CASM,OATNC,UASM,GARJC,UAAgB,E,gBAChBH,mBAAA,CAA0E;+DAA1DI,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEG,WAAW,EAAC;iEAA5CT,KAAA,CAAAC,OAAO,E,GACvBL,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKa,SAAA,QAAAC,WAAA,CAHcX,KAAA,CAAAY,KAAK,EAAbC,IAAI;yBAAfhB,mBAAA,CAGK;MAHsBiB,GAAG,EAAED,IAAI,CAAClB;wBACnCC,mBAAA,CAAkD;MAA3CmB,IAAI,EAAC,UAAU;uCAAUF,IAAI,CAACG,SAAS,GAAAd;4DAAdW,IAAI,CAACG,SAAS,E,oBAAI,GAClD,GAAAC,gBAAA,CAAGJ,IAAI,CAACK,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}