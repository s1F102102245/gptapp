import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  AmplifyUIBuilderClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../AmplifyUIBuilderClient";
import { GetComponentRequest, GetComponentResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetComponentCommandInput extends GetComponentRequest {}
export interface GetComponentCommandOutput
  extends GetComponentResponse,
    __MetadataBearer {}
export declare class GetComponentCommand extends $Command<
  GetComponentCommandInput,
  GetComponentCommandOutput,
  AmplifyUIBuilderClientResolvedConfig
> {
  readonly input: GetComponentCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetComponentCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: AmplifyUIBuilderClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetComponentCommandInput, GetComponentCommandOutput>;
  private serialize;
  private deserialize;
}
