import path from 'path';
import fs from 'fs/promises';
/**
 * Encapsulates a result from a call to the codegen form generation service
 */
export class CodegenGraphqlFormGeneratorResult {
    fileNameComponentMap;
    /**
     * Creates a CodegenGraphqlFormGeneratorResponse
     */
    constructor(fileNameComponentMap) {
        this.fileNameComponentMap = fileNameComponentMap;
    }
    /**
     * writes the components to a given directory
     */
    writeToDirectory = async (directoryPath) => {
        try {
            await fs.stat(directoryPath);
        }
        catch (e) {
            await fs.mkdir(directoryPath);
        }
        for (const [fileName, content] of Object.entries(this.fileNameComponentMap)) {
            if (content) {
                const fd = await fs.open(path.join(directoryPath, fileName), 'w+');
                try {
                    await fd.writeFile(content);
                }
                finally {
                    await fd.close();
                }
            }
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZWdlbl9ncmFwaHFsX2Zvcm1fZ2VuZXJhdGlvbl9yZXN1bHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY29kZWdlbl9ncmFwaHFsX2Zvcm1fZ2VuZXJhdGlvbl9yZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBQ3hCLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUc3Qjs7R0FFRztBQUNILE1BQU0sT0FBTyxpQ0FBaUM7SUFNZjtJQUg3Qjs7T0FFRztJQUNILFlBQTZCLG9CQUE0QztRQUE1Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXdCO0lBQUcsQ0FBQztJQUM3RTs7T0FFRztJQUNILGdCQUFnQixHQUFHLEtBQUssRUFBRSxhQUFxQixFQUFFLEVBQUU7UUFDakQsSUFBSTtZQUNGLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUM5QjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQy9CO1FBQ0QsS0FBSyxNQUFNLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQzlDLElBQUksQ0FBQyxvQkFBb0IsQ0FDMUIsRUFBRTtZQUNELElBQUksT0FBTyxFQUFFO2dCQUNYLE1BQU0sRUFBRSxHQUFHLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDbkUsSUFBSTtvQkFDRixNQUFNLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQzdCO3dCQUFTO29CQUNSLE1BQU0sRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO2lCQUNsQjthQUNGO1NBQ0Y7SUFDSCxDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzL3Byb21pc2VzJztcbmltcG9ydCB7IEdyYXBocWxHZW5lcmF0aW9uUmVzdWx0IH0gZnJvbSAnLi9ncmFwaHFsX2Zvcm1fZ2VuZXJhdG9yLmpzJztcblxuLyoqXG4gKiBFbmNhcHN1bGF0ZXMgYSByZXN1bHQgZnJvbSBhIGNhbGwgdG8gdGhlIGNvZGVnZW4gZm9ybSBnZW5lcmF0aW9uIHNlcnZpY2VcbiAqL1xuZXhwb3J0IGNsYXNzIENvZGVnZW5HcmFwaHFsRm9ybUdlbmVyYXRvclJlc3VsdFxuICBpbXBsZW1lbnRzIEdyYXBocWxHZW5lcmF0aW9uUmVzdWx0XG57XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgQ29kZWdlbkdyYXBocWxGb3JtR2VuZXJhdG9yUmVzcG9uc2VcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZmlsZU5hbWVDb21wb25lbnRNYXA6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4pIHt9XG4gIC8qKlxuICAgKiB3cml0ZXMgdGhlIGNvbXBvbmVudHMgdG8gYSBnaXZlbiBkaXJlY3RvcnlcbiAgICovXG4gIHdyaXRlVG9EaXJlY3RvcnkgPSBhc3luYyAoZGlyZWN0b3J5UGF0aDogc3RyaW5nKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGZzLnN0YXQoZGlyZWN0b3J5UGF0aCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgYXdhaXQgZnMubWtkaXIoZGlyZWN0b3J5UGF0aCk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgW2ZpbGVOYW1lLCBjb250ZW50XSBvZiBPYmplY3QuZW50cmllcyhcbiAgICAgIHRoaXMuZmlsZU5hbWVDb21wb25lbnRNYXBcbiAgICApKSB7XG4gICAgICBpZiAoY29udGVudCkge1xuICAgICAgICBjb25zdCBmZCA9IGF3YWl0IGZzLm9wZW4ocGF0aC5qb2luKGRpcmVjdG9yeVBhdGgsIGZpbGVOYW1lKSwgJ3crJyk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgYXdhaXQgZmQud3JpdGVGaWxlKGNvbnRlbnQpO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIGF3YWl0IGZkLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG4iXX0=