"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResourceName = exports.setResourceName = void 0;
const resourceNameKey = 'graphqltransformer:resourceName';
const setResourceName = (scope, { name, setOnDefaultChild }) => {
    scope.node.addMetadata(resourceNameKey, name);
    if (setOnDefaultChild && scope.node.defaultChild && scope.node.defaultChild) {
        scope.node.defaultChild.node.addMetadata(resourceNameKey, name);
    }
};
exports.setResourceName = setResourceName;
const tryAndRetrieveResourceName = (metadata) => metadata.type === resourceNameKey && typeof metadata.data === 'string' ? metadata.data : undefined;
const isDefined = (x) => x !== undefined;
const getResourceName = (scope) => {
    const referencesWithName = scope.node.metadata.map(tryAndRetrieveResourceName).filter(isDefined);
    if (referencesWithName.length > 1)
        throw new Error('Multiple metadata entries specifying a resource name were found, expected 0 or 1.');
    return referencesWithName.length === 1 ? referencesWithName[0] : undefined;
};
exports.getResourceName = getResourceName;
//# sourceMappingURL=resource-name.js.map