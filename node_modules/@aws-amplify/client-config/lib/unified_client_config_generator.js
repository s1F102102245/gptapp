import { unifiedBackendOutputSchema } from '@aws-amplify/backend-output-schemas';
/**
 * Right now this is mostly a stub. This will become a translation layer between backend output and frontend config
 *
 * There may be multiple implementations of this for different frontends
 */
export class UnifiedClientConfigGenerator {
    fetchOutput;
    clientConfigContributors;
    /**
     * Provide a reference to how this config generator should retrieve backend output
     */
    constructor(fetchOutput, clientConfigContributors) {
        this.fetchOutput = fetchOutput;
        this.clientConfigContributors = clientConfigContributors;
    }
    /**
     * Fetch all backend output, invoke each ClientConfigContributor on the result and merge into a single config object
     */
    generateClientConfig = async () => {
        const backendOutput = unifiedBackendOutputSchema.parse(await this.fetchOutput());
        let accumulator = {};
        for (const contributor of this.clientConfigContributors) {
            accumulator = {
                ...accumulator,
                ...(await contributor.contribute(backendOutput)),
            };
        }
        return accumulator;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pZmllZF9jbGllbnRfY29uZmlnX2dlbmVyYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy91bmlmaWVkX2NsaWVudF9jb25maWdfZ2VuZXJhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBS2pGOzs7O0dBSUc7QUFDSCxNQUFNLE9BQU8sNEJBQTRCO0lBS3BCO0lBQ0E7SUFMbkI7O09BRUc7SUFDSCxZQUNtQixXQUF5QyxFQUN6Qyx3QkFBbUQ7UUFEbkQsZ0JBQVcsR0FBWCxXQUFXLENBQThCO1FBQ3pDLDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBMkI7SUFDbkUsQ0FBQztJQUVKOztPQUVHO0lBQ0gsb0JBQW9CLEdBQUcsS0FBSyxJQUEyQixFQUFFO1FBQ3ZELE1BQU0sYUFBYSxHQUFHLDBCQUEwQixDQUFDLEtBQUssQ0FDcEQsTUFBTSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQ3pCLENBQUM7UUFFRixJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7UUFDckIsS0FBSyxNQUFNLFdBQVcsSUFBSSxJQUFJLENBQUMsd0JBQXdCLEVBQUU7WUFDdkQsV0FBVyxHQUFHO2dCQUNaLEdBQUcsV0FBVztnQkFDZCxHQUFHLENBQUMsTUFBTSxXQUFXLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2FBQ2pELENBQUM7U0FDSDtRQUNELE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFja2VuZE91dHB1dCB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9wbHVnaW4tdHlwZXMnO1xuaW1wb3J0IHsgdW5pZmllZEJhY2tlbmRPdXRwdXRTY2hlbWEgfSBmcm9tICdAYXdzLWFtcGxpZnkvYmFja2VuZC1vdXRwdXQtc2NoZW1hcyc7XG5pbXBvcnQgeyBDbGllbnRDb25maWcgfSBmcm9tICcuL2NsaWVudC1jb25maWctdHlwZXMvY2xpZW50X2NvbmZpZy5qcyc7XG5pbXBvcnQgeyBDbGllbnRDb25maWdDb250cmlidXRvciB9IGZyb20gJy4vY2xpZW50LWNvbmZpZy1jb250cmlidXRvci9jbGllbnRfY29uZmlnX2NvbnRyaWJ1dG9yLmpzJztcbmltcG9ydCB7IENsaWVudENvbmZpZ0dlbmVyYXRvciB9IGZyb20gJy4vY2xpZW50X2NvbmZpZ19nZW5lcmF0b3IuanMnO1xuXG4vKipcbiAqIFJpZ2h0IG5vdyB0aGlzIGlzIG1vc3RseSBhIHN0dWIuIFRoaXMgd2lsbCBiZWNvbWUgYSB0cmFuc2xhdGlvbiBsYXllciBiZXR3ZWVuIGJhY2tlbmQgb3V0cHV0IGFuZCBmcm9udGVuZCBjb25maWdcbiAqXG4gKiBUaGVyZSBtYXkgYmUgbXVsdGlwbGUgaW1wbGVtZW50YXRpb25zIG9mIHRoaXMgZm9yIGRpZmZlcmVudCBmcm9udGVuZHNcbiAqL1xuZXhwb3J0IGNsYXNzIFVuaWZpZWRDbGllbnRDb25maWdHZW5lcmF0b3IgaW1wbGVtZW50cyBDbGllbnRDb25maWdHZW5lcmF0b3Ige1xuICAvKipcbiAgICogUHJvdmlkZSBhIHJlZmVyZW5jZSB0byBob3cgdGhpcyBjb25maWcgZ2VuZXJhdG9yIHNob3VsZCByZXRyaWV2ZSBiYWNrZW5kIG91dHB1dFxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZWFkb25seSBmZXRjaE91dHB1dDogKCkgPT4gUHJvbWlzZTxCYWNrZW5kT3V0cHV0PixcbiAgICBwcml2YXRlIHJlYWRvbmx5IGNsaWVudENvbmZpZ0NvbnRyaWJ1dG9yczogQ2xpZW50Q29uZmlnQ29udHJpYnV0b3JbXVxuICApIHt9XG5cbiAgLyoqXG4gICAqIEZldGNoIGFsbCBiYWNrZW5kIG91dHB1dCwgaW52b2tlIGVhY2ggQ2xpZW50Q29uZmlnQ29udHJpYnV0b3Igb24gdGhlIHJlc3VsdCBhbmQgbWVyZ2UgaW50byBhIHNpbmdsZSBjb25maWcgb2JqZWN0XG4gICAqL1xuICBnZW5lcmF0ZUNsaWVudENvbmZpZyA9IGFzeW5jICgpOiBQcm9taXNlPENsaWVudENvbmZpZz4gPT4ge1xuICAgIGNvbnN0IGJhY2tlbmRPdXRwdXQgPSB1bmlmaWVkQmFja2VuZE91dHB1dFNjaGVtYS5wYXJzZShcbiAgICAgIGF3YWl0IHRoaXMuZmV0Y2hPdXRwdXQoKVxuICAgICk7XG5cbiAgICBsZXQgYWNjdW11bGF0b3IgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGNvbnRyaWJ1dG9yIG9mIHRoaXMuY2xpZW50Q29uZmlnQ29udHJpYnV0b3JzKSB7XG4gICAgICBhY2N1bXVsYXRvciA9IHtcbiAgICAgICAgLi4uYWNjdW11bGF0b3IsXG4gICAgICAgIC4uLihhd2FpdCBjb250cmlidXRvci5jb250cmlidXRlKGJhY2tlbmRPdXRwdXQpKSxcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbiAgfTtcbn1cbiJdfQ==