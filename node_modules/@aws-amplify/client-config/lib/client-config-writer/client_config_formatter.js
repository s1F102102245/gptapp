import { ClientConfigFormat, } from '../client-config-types/client_config.js';
import os from 'os';
/**
 * Formats client config to desired format.
 */
export class ClientConfigFormatter {
    configConverter;
    /**
     * Creates new client config formatter.
     */
    constructor(configConverter) {
        this.configConverter = configConverter;
    }
    format = (clientConfig, format) => {
        switch (format) {
            case ClientConfigFormat.TS:
            case ClientConfigFormat.MJS: {
                return `const amplifyConfig = ${JSON.stringify(clientConfig, null, 2)}${os.EOL}export default amplifyConfig;${os.EOL}`;
            }
            case ClientConfigFormat.DART: {
                return `const amplifyConfig = '''${JSON.stringify(this.configConverter.convertToMobileConfig(clientConfig), null, 2)}''';`;
            }
            case ClientConfigFormat.JSON_MOBILE:
                return JSON.stringify(this.configConverter.convertToMobileConfig(clientConfig), null, 2);
            case ClientConfigFormat.JSON:
                return JSON.stringify(clientConfig, null, 2);
            default:
                throw new Error(`Unknown client config format`);
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50X2NvbmZpZ19mb3JtYXR0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xpZW50LWNvbmZpZy13cml0ZXIvY2xpZW50X2NvbmZpZ19mb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLGtCQUFrQixHQUNuQixNQUFNLHlDQUF5QyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxNQUFNLElBQUksQ0FBQztBQUdwQjs7R0FFRztBQUNILE1BQU0sT0FBTyxxQkFBcUI7SUFJSDtJQUg3Qjs7T0FFRztJQUNILFlBQTZCLGVBQXNDO1FBQXRDLG9CQUFlLEdBQWYsZUFBZSxDQUF1QjtJQUFHLENBQUM7SUFFdkUsTUFBTSxHQUFHLENBQUMsWUFBMEIsRUFBRSxNQUEwQixFQUFVLEVBQUU7UUFDMUUsUUFBUSxNQUFNLEVBQUU7WUFDZCxLQUFLLGtCQUFrQixDQUFDLEVBQUUsQ0FBQztZQUMzQixLQUFLLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUMzQixPQUFPLHlCQUF5QixJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQ25FLEVBQUUsQ0FBQyxHQUNMLGdDQUFnQyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDMUM7WUFDRCxLQUFLLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM1QixPQUFPLDRCQUE0QixJQUFJLENBQUMsU0FBUyxDQUMvQyxJQUFJLENBQUMsZUFBZSxDQUFDLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxFQUN4RCxJQUFJLEVBQ0osQ0FBQyxDQUNGLE1BQU0sQ0FBQzthQUNUO1lBQ0QsS0FBSyxrQkFBa0IsQ0FBQyxXQUFXO2dCQUNqQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQ25CLElBQUksQ0FBQyxlQUFlLENBQUMscUJBQXFCLENBQUMsWUFBWSxDQUFDLEVBQ3hELElBQUksRUFDSixDQUFDLENBQ0YsQ0FBQztZQUNKLEtBQUssa0JBQWtCLENBQUMsSUFBSTtnQkFDMUIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDL0M7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO1NBQ25EO0lBQ0gsQ0FBQyxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDbGllbnRDb25maWcsXG4gIENsaWVudENvbmZpZ0Zvcm1hdCxcbn0gZnJvbSAnLi4vY2xpZW50LWNvbmZpZy10eXBlcy9jbGllbnRfY29uZmlnLmpzJztcbmltcG9ydCBvcyBmcm9tICdvcyc7XG5pbXBvcnQgeyBDbGllbnRDb25maWdDb252ZXJ0ZXIgfSBmcm9tICcuL2NsaWVudF9jb25maWdfY29udmVydGVyLmpzJztcblxuLyoqXG4gKiBGb3JtYXRzIGNsaWVudCBjb25maWcgdG8gZGVzaXJlZCBmb3JtYXQuXG4gKi9cbmV4cG9ydCBjbGFzcyBDbGllbnRDb25maWdGb3JtYXR0ZXIge1xuICAvKipcbiAgICogQ3JlYXRlcyBuZXcgY2xpZW50IGNvbmZpZyBmb3JtYXR0ZXIuXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGNvbmZpZ0NvbnZlcnRlcjogQ2xpZW50Q29uZmlnQ29udmVydGVyKSB7fVxuXG4gIGZvcm1hdCA9IChjbGllbnRDb25maWc6IENsaWVudENvbmZpZywgZm9ybWF0OiBDbGllbnRDb25maWdGb3JtYXQpOiBzdHJpbmcgPT4ge1xuICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICBjYXNlIENsaWVudENvbmZpZ0Zvcm1hdC5UUzpcbiAgICAgIGNhc2UgQ2xpZW50Q29uZmlnRm9ybWF0Lk1KUzoge1xuICAgICAgICByZXR1cm4gYGNvbnN0IGFtcGxpZnlDb25maWcgPSAke0pTT04uc3RyaW5naWZ5KGNsaWVudENvbmZpZywgbnVsbCwgMil9JHtcbiAgICAgICAgICBvcy5FT0xcbiAgICAgICAgfWV4cG9ydCBkZWZhdWx0IGFtcGxpZnlDb25maWc7JHtvcy5FT0x9YDtcbiAgICAgIH1cbiAgICAgIGNhc2UgQ2xpZW50Q29uZmlnRm9ybWF0LkRBUlQ6IHtcbiAgICAgICAgcmV0dXJuIGBjb25zdCBhbXBsaWZ5Q29uZmlnID0gJycnJHtKU09OLnN0cmluZ2lmeShcbiAgICAgICAgICB0aGlzLmNvbmZpZ0NvbnZlcnRlci5jb252ZXJ0VG9Nb2JpbGVDb25maWcoY2xpZW50Q29uZmlnKSxcbiAgICAgICAgICBudWxsLFxuICAgICAgICAgIDJcbiAgICAgICAgKX0nJyc7YDtcbiAgICAgIH1cbiAgICAgIGNhc2UgQ2xpZW50Q29uZmlnRm9ybWF0LkpTT05fTU9CSUxFOlxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoXG4gICAgICAgICAgdGhpcy5jb25maWdDb252ZXJ0ZXIuY29udmVydFRvTW9iaWxlQ29uZmlnKGNsaWVudENvbmZpZyksXG4gICAgICAgICAgbnVsbCxcbiAgICAgICAgICAyXG4gICAgICAgICk7XG4gICAgICBjYXNlIENsaWVudENvbmZpZ0Zvcm1hdC5KU09OOlxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoY2xpZW50Q29uZmlnLCBudWxsLCAyKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjbGllbnQgY29uZmlnIGZvcm1hdGApO1xuICAgIH1cbiAgfTtcbn1cbiJdfQ==