import { Printer } from '@aws-amplify/cli-core';
/**
 * Command to list sandbox secrets.
 */
export class SandboxSecretListCommand {
    sandboxIdResolver;
    secretClient;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * List sandbox secret command.
     */
    constructor(sandboxIdResolver, secretClient) {
        this.sandboxIdResolver = sandboxIdResolver;
        this.secretClient = secretClient;
        this.command = 'list';
        this.describe = 'List all sandbox secrets';
    }
    /**
     * @inheritDoc
     */
    handler = async () => {
        const sandboxBackendIdentifier = await this.sandboxIdResolver.resolve();
        const secretIds = await this.secretClient.listSecrets(sandboxBackendIdentifier);
        Printer.printRecord({
            names: secretIds.map((secretId) => secretId.name),
        });
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveF9zZWNyZXRfbGlzdF9jb21tYW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbW1hbmRzL3NhbmRib3gvc2FuZGJveC1zZWNyZXQvc2FuZGJveF9zZWNyZXRfbGlzdF9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVoRDs7R0FFRztBQUNILE1BQU0sT0FBTyx3QkFBd0I7SUFlaEI7SUFDQTtJQWZuQjs7T0FFRztJQUNNLE9BQU8sQ0FBUztJQUV6Qjs7T0FFRztJQUNNLFFBQVEsQ0FBUztJQUUxQjs7T0FFRztJQUNILFlBQ21CLGlCQUEyQyxFQUMzQyxZQUEwQjtRQUQxQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQTBCO1FBQzNDLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBRTNDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsMEJBQTBCLENBQUM7SUFDN0MsQ0FBQztJQUVEOztPQUVHO0lBQ0gsT0FBTyxHQUFHLEtBQUssSUFBbUIsRUFBRTtRQUNsQyxNQUFNLHdCQUF3QixHQUFHLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3hFLE1BQU0sU0FBUyxHQUFHLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQ25ELHdCQUF3QixDQUN6QixDQUFDO1FBRUYsT0FBTyxDQUFDLFdBQVcsQ0FBQztZQUNsQixLQUFLLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztTQUNsRCxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1hbmRNb2R1bGUgfSBmcm9tICd5YXJncyc7XG5pbXBvcnQgeyBTZWNyZXRDbGllbnQgfSBmcm9tICdAYXdzLWFtcGxpZnkvYmFja2VuZC1zZWNyZXQnO1xuaW1wb3J0IHsgU2FuZGJveEJhY2tlbmRJZFJlc29sdmVyIH0gZnJvbSAnLi4vc2FuZGJveF9pZF9yZXNvbHZlci5qcyc7XG5pbXBvcnQgeyBQcmludGVyIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2NsaS1jb3JlJztcblxuLyoqXG4gKiBDb21tYW5kIHRvIGxpc3Qgc2FuZGJveCBzZWNyZXRzLlxuICovXG5leHBvcnQgY2xhc3MgU2FuZGJveFNlY3JldExpc3RDb21tYW5kIGltcGxlbWVudHMgQ29tbWFuZE1vZHVsZTxvYmplY3Q+IHtcbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICByZWFkb25seSBjb21tYW5kOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICByZWFkb25seSBkZXNjcmliZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBMaXN0IHNhbmRib3ggc2VjcmV0IGNvbW1hbmQuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNhbmRib3hJZFJlc29sdmVyOiBTYW5kYm94QmFja2VuZElkUmVzb2x2ZXIsXG4gICAgcHJpdmF0ZSByZWFkb25seSBzZWNyZXRDbGllbnQ6IFNlY3JldENsaWVudFxuICApIHtcbiAgICB0aGlzLmNvbW1hbmQgPSAnbGlzdCc7XG4gICAgdGhpcy5kZXNjcmliZSA9ICdMaXN0IGFsbCBzYW5kYm94IHNlY3JldHMnO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICBoYW5kbGVyID0gYXN5bmMgKCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIGNvbnN0IHNhbmRib3hCYWNrZW5kSWRlbnRpZmllciA9IGF3YWl0IHRoaXMuc2FuZGJveElkUmVzb2x2ZXIucmVzb2x2ZSgpO1xuICAgIGNvbnN0IHNlY3JldElkcyA9IGF3YWl0IHRoaXMuc2VjcmV0Q2xpZW50Lmxpc3RTZWNyZXRzKFxuICAgICAgc2FuZGJveEJhY2tlbmRJZGVudGlmaWVyXG4gICAgKTtcblxuICAgIFByaW50ZXIucHJpbnRSZWNvcmQoe1xuICAgICAgbmFtZXM6IHNlY3JldElkcy5tYXAoKHNlY3JldElkKSA9PiBzZWNyZXRJZC5uYW1lKSxcbiAgICB9KTtcbiAgfTtcbn1cbiJdfQ==