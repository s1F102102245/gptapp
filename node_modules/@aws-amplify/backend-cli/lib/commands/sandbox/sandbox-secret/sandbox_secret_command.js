import { handleCommandFailure } from '../../../command_failure_handler.js';
/**
 * Root command to manage sandbox secret.
 */
export class SandboxSecretCommand {
    secretSubCommands;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * Root command to manage sandbox secret
     */
    constructor(secretSubCommands) {
        this.secretSubCommands = secretSubCommands;
        this.command = 'secret <command>';
        this.describe = 'Manage sandbox secret';
    }
    /**
     * @inheritDoc
     */
    handler = () => {
        // no-op for non-terminal command.
        return;
    };
    /**
     * @inheritDoc
     */
    builder = (yargs) => {
        return yargs
            .command(this.secretSubCommands)
            .help()
            .fail((msg, err) => {
            handleCommandFailure(msg, err, yargs);
            yargs.exit(1, err);
        });
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveF9zZWNyZXRfY29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21tYW5kcy9zYW5kYm94L3NhbmRib3gtc2VjcmV0L3NhbmRib3hfc2VjcmV0X2NvbW1hbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFFM0U7O0dBRUc7QUFDSCxNQUFNLE9BQU8sb0JBQW9CO0lBY0Y7SUFiN0I7O09BRUc7SUFDTSxPQUFPLENBQVM7SUFFekI7O09BRUc7SUFDTSxRQUFRLENBQVM7SUFFMUI7O09BRUc7SUFDSCxZQUE2QixpQkFBa0M7UUFBbEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFpQjtRQUM3RCxJQUFJLENBQUMsT0FBTyxHQUFHLGtCQUFrQixDQUFDO1FBQ2xDLElBQUksQ0FBQyxRQUFRLEdBQUcsdUJBQXVCLENBQUM7SUFDMUMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsT0FBTyxHQUFHLEdBQVMsRUFBRTtRQUNuQixrQ0FBa0M7UUFDbEMsT0FBTztJQUNULENBQUMsQ0FBQztJQUVGOztPQUVHO0lBQ0gsT0FBTyxHQUFHLENBQUMsS0FBVyxFQUFRLEVBQUU7UUFDOUIsT0FBTyxLQUFLO2FBQ1QsT0FBTyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQzthQUMvQixJQUFJLEVBQUU7YUFDTixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7WUFDakIsb0JBQW9CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUN0QyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNyQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXJndiwgQ29tbWFuZE1vZHVsZSB9IGZyb20gJ3lhcmdzJztcbmltcG9ydCB7IGhhbmRsZUNvbW1hbmRGYWlsdXJlIH0gZnJvbSAnLi4vLi4vLi4vY29tbWFuZF9mYWlsdXJlX2hhbmRsZXIuanMnO1xuXG4vKipcbiAqIFJvb3QgY29tbWFuZCB0byBtYW5hZ2Ugc2FuZGJveCBzZWNyZXQuXG4gKi9cbmV4cG9ydCBjbGFzcyBTYW5kYm94U2VjcmV0Q29tbWFuZCBpbXBsZW1lbnRzIENvbW1hbmRNb2R1bGU8b2JqZWN0PiB7XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgY29tbWFuZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgZGVzY3JpYmU6IHN0cmluZztcblxuICAvKipcbiAgICogUm9vdCBjb21tYW5kIHRvIG1hbmFnZSBzYW5kYm94IHNlY3JldFxuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBzZWNyZXRTdWJDb21tYW5kczogQ29tbWFuZE1vZHVsZVtdKSB7XG4gICAgdGhpcy5jb21tYW5kID0gJ3NlY3JldCA8Y29tbWFuZD4nO1xuICAgIHRoaXMuZGVzY3JpYmUgPSAnTWFuYWdlIHNhbmRib3ggc2VjcmV0JztcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgaGFuZGxlciA9ICgpOiB2b2lkID0+IHtcbiAgICAvLyBuby1vcCBmb3Igbm9uLXRlcm1pbmFsIGNvbW1hbmQuXG4gICAgcmV0dXJuO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgYnVpbGRlciA9ICh5YXJnczogQXJndik6IEFyZ3YgPT4ge1xuICAgIHJldHVybiB5YXJnc1xuICAgICAgLmNvbW1hbmQodGhpcy5zZWNyZXRTdWJDb21tYW5kcylcbiAgICAgIC5oZWxwKClcbiAgICAgIC5mYWlsKChtc2csIGVycikgPT4ge1xuICAgICAgICBoYW5kbGVDb21tYW5kRmFpbHVyZShtc2csIGVyciwgeWFyZ3MpO1xuICAgICAgICB5YXJncy5leGl0KDEsIGVycik7XG4gICAgICB9KTtcbiAgfTtcbn1cbiJdfQ==