import { LocalNamespaceResolver } from '../../../backend-identifier/local_namespace_resolver.js';
import { SandboxBackendIdResolver } from '../sandbox_id_resolver.js';
import { PackageJsonReader } from '@aws-amplify/platform-core';
import { SandboxSecretCommand } from './sandbox_secret_command.js';
import { getSecretClient } from '@aws-amplify/backend-secret';
import { SandboxSecretSetCommand } from './sandbox_secret_set_command.js';
import { SandboxSecretRemoveCommand } from './sandbox_secret_remove_command.js';
import { SandboxSecretGetCommand } from './sandbox_secret_get_command.js';
import { SandboxSecretListCommand } from './sandbox_secret_list_command.js';
/**
 * Creates sandbox secret commands.
 */
export const createSandboxSecretCommand = () => {
    const sandboxIdResolver = new SandboxBackendIdResolver(new LocalNamespaceResolver(new PackageJsonReader()));
    const secretClient = getSecretClient();
    const setCommand = new SandboxSecretSetCommand(sandboxIdResolver, secretClient);
    const removeCommand = new SandboxSecretRemoveCommand(sandboxIdResolver, secretClient);
    const getCommand = new SandboxSecretGetCommand(sandboxIdResolver, secretClient);
    const listCommand = new SandboxSecretListCommand(sandboxIdResolver, secretClient);
    return new SandboxSecretCommand([
        setCommand,
        removeCommand,
        getCommand,
        listCommand,
    ]);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveF9zZWNyZXRfY29tbWFuZF9mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbW1hbmRzL3NhbmRib3gvc2FuZGJveC1zZWNyZXQvc2FuZGJveF9zZWNyZXRfY29tbWFuZF9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUU1RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDBCQUEwQixHQUFHLEdBQWtCLEVBQUU7SUFDNUQsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLHdCQUF3QixDQUNwRCxJQUFJLHNCQUFzQixDQUFDLElBQUksaUJBQWlCLEVBQUUsQ0FBQyxDQUNwRCxDQUFDO0lBRUYsTUFBTSxZQUFZLEdBQUcsZUFBZSxFQUFFLENBQUM7SUFDdkMsTUFBTSxVQUFVLEdBQUcsSUFBSSx1QkFBdUIsQ0FDNUMsaUJBQWlCLEVBQ2pCLFlBQVksQ0FDYixDQUFDO0lBQ0YsTUFBTSxhQUFhLEdBQUcsSUFBSSwwQkFBMEIsQ0FDbEQsaUJBQWlCLEVBQ2pCLFlBQVksQ0FDYixDQUFDO0lBQ0YsTUFBTSxVQUFVLEdBQUcsSUFBSSx1QkFBdUIsQ0FDNUMsaUJBQWlCLEVBQ2pCLFlBQVksQ0FDYixDQUFDO0lBQ0YsTUFBTSxXQUFXLEdBQUcsSUFBSSx3QkFBd0IsQ0FDOUMsaUJBQWlCLEVBQ2pCLFlBQVksQ0FDYixDQUFDO0lBRUYsT0FBTyxJQUFJLG9CQUFvQixDQUFDO1FBQzlCLFVBQXNDO1FBQ3RDLGFBQXlDO1FBQ3pDLFVBQXNDO1FBQ3RDLFdBQVc7S0FDWixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tYW5kTW9kdWxlIH0gZnJvbSAneWFyZ3MnO1xuXG5pbXBvcnQgeyBMb2NhbE5hbWVzcGFjZVJlc29sdmVyIH0gZnJvbSAnLi4vLi4vLi4vYmFja2VuZC1pZGVudGlmaWVyL2xvY2FsX25hbWVzcGFjZV9yZXNvbHZlci5qcyc7XG5pbXBvcnQgeyBTYW5kYm94QmFja2VuZElkUmVzb2x2ZXIgfSBmcm9tICcuLi9zYW5kYm94X2lkX3Jlc29sdmVyLmpzJztcbmltcG9ydCB7IFBhY2thZ2VKc29uUmVhZGVyIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L3BsYXRmb3JtLWNvcmUnO1xuaW1wb3J0IHsgU2FuZGJveFNlY3JldENvbW1hbmQgfSBmcm9tICcuL3NhbmRib3hfc2VjcmV0X2NvbW1hbmQuanMnO1xuaW1wb3J0IHsgZ2V0U2VjcmV0Q2xpZW50IH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2JhY2tlbmQtc2VjcmV0JztcbmltcG9ydCB7IFNhbmRib3hTZWNyZXRTZXRDb21tYW5kIH0gZnJvbSAnLi9zYW5kYm94X3NlY3JldF9zZXRfY29tbWFuZC5qcyc7XG5pbXBvcnQgeyBTYW5kYm94U2VjcmV0UmVtb3ZlQ29tbWFuZCB9IGZyb20gJy4vc2FuZGJveF9zZWNyZXRfcmVtb3ZlX2NvbW1hbmQuanMnO1xuaW1wb3J0IHsgU2FuZGJveFNlY3JldEdldENvbW1hbmQgfSBmcm9tICcuL3NhbmRib3hfc2VjcmV0X2dldF9jb21tYW5kLmpzJztcbmltcG9ydCB7IFNhbmRib3hTZWNyZXRMaXN0Q29tbWFuZCB9IGZyb20gJy4vc2FuZGJveF9zZWNyZXRfbGlzdF9jb21tYW5kLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIHNhbmRib3ggc2VjcmV0IGNvbW1hbmRzLlxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlU2FuZGJveFNlY3JldENvbW1hbmQgPSAoKTogQ29tbWFuZE1vZHVsZSA9PiB7XG4gIGNvbnN0IHNhbmRib3hJZFJlc29sdmVyID0gbmV3IFNhbmRib3hCYWNrZW5kSWRSZXNvbHZlcihcbiAgICBuZXcgTG9jYWxOYW1lc3BhY2VSZXNvbHZlcihuZXcgUGFja2FnZUpzb25SZWFkZXIoKSlcbiAgKTtcblxuICBjb25zdCBzZWNyZXRDbGllbnQgPSBnZXRTZWNyZXRDbGllbnQoKTtcbiAgY29uc3Qgc2V0Q29tbWFuZCA9IG5ldyBTYW5kYm94U2VjcmV0U2V0Q29tbWFuZChcbiAgICBzYW5kYm94SWRSZXNvbHZlcixcbiAgICBzZWNyZXRDbGllbnRcbiAgKTtcbiAgY29uc3QgcmVtb3ZlQ29tbWFuZCA9IG5ldyBTYW5kYm94U2VjcmV0UmVtb3ZlQ29tbWFuZChcbiAgICBzYW5kYm94SWRSZXNvbHZlcixcbiAgICBzZWNyZXRDbGllbnRcbiAgKTtcbiAgY29uc3QgZ2V0Q29tbWFuZCA9IG5ldyBTYW5kYm94U2VjcmV0R2V0Q29tbWFuZChcbiAgICBzYW5kYm94SWRSZXNvbHZlcixcbiAgICBzZWNyZXRDbGllbnRcbiAgKTtcbiAgY29uc3QgbGlzdENvbW1hbmQgPSBuZXcgU2FuZGJveFNlY3JldExpc3RDb21tYW5kKFxuICAgIHNhbmRib3hJZFJlc29sdmVyLFxuICAgIHNlY3JldENsaWVudFxuICApO1xuXG4gIHJldHVybiBuZXcgU2FuZGJveFNlY3JldENvbW1hbmQoW1xuICAgIHNldENvbW1hbmQgYXMgdW5rbm93biBhcyBDb21tYW5kTW9kdWxlLFxuICAgIHJlbW92ZUNvbW1hbmQgYXMgdW5rbm93biBhcyBDb21tYW5kTW9kdWxlLFxuICAgIGdldENvbW1hbmQgYXMgdW5rbm93biBhcyBDb21tYW5kTW9kdWxlLFxuICAgIGxpc3RDb21tYW5kLFxuICBdKTtcbn07XG4iXX0=