import { handleCommandFailure } from '../../command_failure_handler.js';
/**
 * Root command to configure Amplify.
 */
export class ConfigureCommand {
    configureSubCommands;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * Root command to configure Amplify.
     */
    constructor(configureSubCommands) {
        this.configureSubCommands = configureSubCommands;
        this.command = 'configure <command>';
        this.describe = 'Configure AWS Amplify';
    }
    /**
     * @inheritDoc
     */
    handler = () => {
        // no-op for non-terminal command.
        return;
    };
    /**
     * @inheritDoc
     */
    builder = (yargs) => {
        return yargs
            .version(false)
            .command(this.configureSubCommands)
            .help()
            .fail((msg, err) => {
            handleCommandFailure(msg, err, yargs);
            yargs.exit(1, err);
        });
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJlX2NvbW1hbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbWFuZHMvY29uZmlndXJlL2NvbmZpZ3VyZV9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRXhFOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGdCQUFnQjtJQWNFO0lBYjdCOztPQUVHO0lBQ00sT0FBTyxDQUFTO0lBRXpCOztPQUVHO0lBQ00sUUFBUSxDQUFTO0lBRTFCOztPQUVHO0lBQ0gsWUFBNkIsb0JBQXFDO1FBQXJDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBaUI7UUFDaEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxxQkFBcUIsQ0FBQztRQUNyQyxJQUFJLENBQUMsUUFBUSxHQUFHLHVCQUF1QixDQUFDO0lBQzFDLENBQUM7SUFFRDs7T0FFRztJQUNILE9BQU8sR0FBRyxHQUFTLEVBQUU7UUFDbkIsa0NBQWtDO1FBQ2xDLE9BQU87SUFDVCxDQUFDLENBQUM7SUFFRjs7T0FFRztJQUNILE9BQU8sR0FBRyxDQUFDLEtBQVcsRUFBUSxFQUFFO1FBQzlCLE9BQU8sS0FBSzthQUNULE9BQU8sQ0FBQyxLQUFLLENBQUM7YUFDZCxPQUFPLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDO2FBQ2xDLElBQUksRUFBRTthQUNOLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUNqQixvQkFBb0IsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3RDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcmd2LCBDb21tYW5kTW9kdWxlIH0gZnJvbSAneWFyZ3MnO1xuaW1wb3J0IHsgaGFuZGxlQ29tbWFuZEZhaWx1cmUgfSBmcm9tICcuLi8uLi9jb21tYW5kX2ZhaWx1cmVfaGFuZGxlci5qcyc7XG5cbi8qKlxuICogUm9vdCBjb21tYW5kIHRvIGNvbmZpZ3VyZSBBbXBsaWZ5LlxuICovXG5leHBvcnQgY2xhc3MgQ29uZmlndXJlQ29tbWFuZCBpbXBsZW1lbnRzIENvbW1hbmRNb2R1bGU8b2JqZWN0PiB7XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgY29tbWFuZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgZGVzY3JpYmU6IHN0cmluZztcblxuICAvKipcbiAgICogUm9vdCBjb21tYW5kIHRvIGNvbmZpZ3VyZSBBbXBsaWZ5LlxuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBjb25maWd1cmVTdWJDb21tYW5kczogQ29tbWFuZE1vZHVsZVtdKSB7XG4gICAgdGhpcy5jb21tYW5kID0gJ2NvbmZpZ3VyZSA8Y29tbWFuZD4nO1xuICAgIHRoaXMuZGVzY3JpYmUgPSAnQ29uZmlndXJlIEFXUyBBbXBsaWZ5JztcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgaGFuZGxlciA9ICgpOiB2b2lkID0+IHtcbiAgICAvLyBuby1vcCBmb3Igbm9uLXRlcm1pbmFsIGNvbW1hbmQuXG4gICAgcmV0dXJuO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgYnVpbGRlciA9ICh5YXJnczogQXJndik6IEFyZ3YgPT4ge1xuICAgIHJldHVybiB5YXJnc1xuICAgICAgLnZlcnNpb24oZmFsc2UpXG4gICAgICAuY29tbWFuZCh0aGlzLmNvbmZpZ3VyZVN1YkNvbW1hbmRzKVxuICAgICAgLmhlbHAoKVxuICAgICAgLmZhaWwoKG1zZywgZXJyKSA9PiB7XG4gICAgICAgIGhhbmRsZUNvbW1hbmRGYWlsdXJlKG1zZywgZXJyLCB5YXJncyk7XG4gICAgICAgIHlhcmdzLmV4aXQoMSwgZXJyKTtcbiAgICAgIH0pO1xuICB9O1xufVxuIl19