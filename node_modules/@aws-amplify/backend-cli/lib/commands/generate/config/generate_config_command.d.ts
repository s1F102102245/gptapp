import { Argv, CommandModule } from 'yargs';
import { ClientConfigFormat } from '@aws-amplify/client-config';
import { BackendIdentifierResolver } from '../../../backend-identifier/backend_identifier_resolver.js';
import { ClientConfigGeneratorAdapter } from '../../../client-config/client_config_generator_adapter.js';
import { ArgumentsKebabCase } from '../../../kebab_case.js';
export type GenerateConfigCommandOptions = ArgumentsKebabCase<GenerateConfigCommandOptionsCamelCase>;
type GenerateConfigCommandOptionsCamelCase = {
    stack: string | undefined;
    appId: string | undefined;
    branch: string | undefined;
    format: ClientConfigFormat | undefined;
    outDir: string | undefined;
};
/**
 * Command that generates client config.
 */
export declare class GenerateConfigCommand implements CommandModule<object, GenerateConfigCommandOptions> {
    private readonly clientConfigGenerator;
    private readonly backendIdentifierResolver;
    /**
     * @inheritDoc
     */
    readonly command: string;
    /**
     * @inheritDoc
     */
    readonly describe: string;
    /**
     * Creates client config generation command.
     */
    constructor(clientConfigGenerator: ClientConfigGeneratorAdapter, backendIdentifierResolver: BackendIdentifierResolver);
    /**
     * @inheritDoc
     */
    handler: (args: GenerateConfigCommandOptions) => Promise<void>;
    /**
     * @inheritDoc
     */
    builder: (yargs: Argv) => Argv<GenerateConfigCommandOptions>;
}
export {};
//# sourceMappingURL=generate_config_command.d.ts.map