import { COLOR, Printer } from '@aws-amplify/cli-core';
import { InvalidCredentialError } from './error/credential_error.js';
import { EOL } from 'os';
/**
 * Format error output when a command fails by displaying the error message in
 * red color and displaying the message before the help as well.
 * @param msg error message set in the yargs:check validations
 * @param err errors thrown by yargs handlers
 * @param yargs instance of yargs as made available in the builder
 */
export const handleCommandFailure = (msg, err, yargs) => {
    if (isUserForceClosePromptError(err)) {
        return;
    }
    if (err instanceof InvalidCredentialError) {
        Printer.print(`${err.message}${EOL}`, COLOR.RED);
        return;
    }
    Printer.printNewLine();
    yargs.showHelp();
    Printer.printNewLine();
    Printer.print(msg || String(err), COLOR.RED);
    Printer.printNewLine();
};
const isUserForceClosePromptError = (err) => {
    return err?.message.includes('User force closed the prompt');
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZF9mYWlsdXJlX2hhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY29tbWFuZF9mYWlsdXJlX2hhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sSUFBSSxDQUFDO0FBRXpCOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLENBQUMsR0FBVyxFQUFFLEdBQVUsRUFBRSxLQUFXLEVBQUUsRUFBRTtJQUMzRSxJQUFJLDJCQUEyQixDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3BDLE9BQU87S0FDUjtJQUVELElBQUksR0FBRyxZQUFZLHNCQUFzQixFQUFFO1FBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRSxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqRCxPQUFPO0tBQ1I7SUFFRCxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdkIsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBRWpCLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN2QixPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzdDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUN6QixDQUFDLENBQUM7QUFFRixNQUFNLDJCQUEyQixHQUFHLENBQUMsR0FBVSxFQUFXLEVBQUU7SUFDMUQsT0FBTyxHQUFHLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0FBQy9ELENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFyZ3YgfSBmcm9tICd5YXJncyc7XG5pbXBvcnQgeyBDT0xPUiwgUHJpbnRlciB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9jbGktY29yZSc7XG5pbXBvcnQgeyBJbnZhbGlkQ3JlZGVudGlhbEVycm9yIH0gZnJvbSAnLi9lcnJvci9jcmVkZW50aWFsX2Vycm9yLmpzJztcbmltcG9ydCB7IEVPTCB9IGZyb20gJ29zJztcblxuLyoqXG4gKiBGb3JtYXQgZXJyb3Igb3V0cHV0IHdoZW4gYSBjb21tYW5kIGZhaWxzIGJ5IGRpc3BsYXlpbmcgdGhlIGVycm9yIG1lc3NhZ2UgaW5cbiAqIHJlZCBjb2xvciBhbmQgZGlzcGxheWluZyB0aGUgbWVzc2FnZSBiZWZvcmUgdGhlIGhlbHAgYXMgd2VsbC5cbiAqIEBwYXJhbSBtc2cgZXJyb3IgbWVzc2FnZSBzZXQgaW4gdGhlIHlhcmdzOmNoZWNrIHZhbGlkYXRpb25zXG4gKiBAcGFyYW0gZXJyIGVycm9ycyB0aHJvd24gYnkgeWFyZ3MgaGFuZGxlcnNcbiAqIEBwYXJhbSB5YXJncyBpbnN0YW5jZSBvZiB5YXJncyBhcyBtYWRlIGF2YWlsYWJsZSBpbiB0aGUgYnVpbGRlclxuICovXG5leHBvcnQgY29uc3QgaGFuZGxlQ29tbWFuZEZhaWx1cmUgPSAobXNnOiBzdHJpbmcsIGVycjogRXJyb3IsIHlhcmdzOiBBcmd2KSA9PiB7XG4gIGlmIChpc1VzZXJGb3JjZUNsb3NlUHJvbXB0RXJyb3IoZXJyKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChlcnIgaW5zdGFuY2VvZiBJbnZhbGlkQ3JlZGVudGlhbEVycm9yKSB7XG4gICAgUHJpbnRlci5wcmludChgJHtlcnIubWVzc2FnZX0ke0VPTH1gLCBDT0xPUi5SRUQpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIFByaW50ZXIucHJpbnROZXdMaW5lKCk7XG4gIHlhcmdzLnNob3dIZWxwKCk7XG5cbiAgUHJpbnRlci5wcmludE5ld0xpbmUoKTtcbiAgUHJpbnRlci5wcmludChtc2cgfHwgU3RyaW5nKGVyciksIENPTE9SLlJFRCk7XG4gIFByaW50ZXIucHJpbnROZXdMaW5lKCk7XG59O1xuXG5jb25zdCBpc1VzZXJGb3JjZUNsb3NlUHJvbXB0RXJyb3IgPSAoZXJyOiBFcnJvcik6IGJvb2xlYW4gPT4ge1xuICByZXR1cm4gZXJyPy5tZXNzYWdlLmluY2x1ZGVzKCdVc2VyIGZvcmNlIGNsb3NlZCB0aGUgcHJvbXB0Jyk7XG59O1xuIl19