import { createLocalGraphqlFormGenerator } from '@aws-amplify/form-generator';
import { createGraphqlDocumentGenerator } from '@aws-amplify/model-generator';
/**
 * Creates a handler for FormGeneration
 */
export class FormGenerationHandler {
    formGenParams;
    /**
     * Instantiates the handler
     */
    constructor(formGenParams) {
        this.formGenParams = formGenParams;
    }
    generate = async (params) => {
        const { backendIdentifier, modelsOutDir, uiOutDir, apiUrl, modelsFilter } = params;
        const { credentialProvider } = this.formGenParams;
        const graphqlClientGenerator = createGraphqlDocumentGenerator({
            backendIdentifier,
            credentialProvider,
        });
        const modelsResult = await graphqlClientGenerator.generateModels({
            language: 'typescript',
        });
        await modelsResult.writeToDirectory(modelsOutDir);
        const localFormGenerator = createLocalGraphqlFormGenerator({
            introspectionSchemaUrl: apiUrl,
            graphqlModelDirectoryPath: './graphql',
        });
        const result = await localFormGenerator.generateForms({
            models: modelsFilter,
        });
        await result.writeToDirectory(uiOutDir);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybV9nZW5lcmF0aW9uX2hhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZm9ybS1nZW5lcmF0aW9uL2Zvcm1fZ2VuZXJhdGlvbl9oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzlFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBYzlFOztHQUVHO0FBQ0gsTUFBTSxPQUFPLHFCQUFxQjtJQUlIO0lBSDdCOztPQUVHO0lBQ0gsWUFBNkIsYUFBNEM7UUFBNUMsa0JBQWEsR0FBYixhQUFhLENBQStCO0lBQUcsQ0FBQztJQUM3RSxRQUFRLEdBQUcsS0FBSyxFQUFFLE1BQTRCLEVBQUUsRUFBRTtRQUNoRCxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLEdBQ3ZFLE1BQU0sQ0FBQztRQUNULE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDbEQsTUFBTSxzQkFBc0IsR0FBRyw4QkFBOEIsQ0FBQztZQUM1RCxpQkFBaUI7WUFDakIsa0JBQWtCO1NBQ25CLENBQUMsQ0FBQztRQUNILE1BQU0sWUFBWSxHQUFHLE1BQU0sc0JBQXNCLENBQUMsY0FBYyxDQUFDO1lBQy9ELFFBQVEsRUFBRSxZQUFZO1NBQ3ZCLENBQUMsQ0FBQztRQUNILE1BQU0sWUFBWSxDQUFDLGdCQUFnQixDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2xELE1BQU0sa0JBQWtCLEdBQUcsK0JBQStCLENBQUM7WUFDekQsc0JBQXNCLEVBQUUsTUFBTTtZQUM5Qix5QkFBeUIsRUFBRSxXQUFXO1NBQ3ZDLENBQUMsQ0FBQztRQUNILE1BQU0sTUFBTSxHQUFHLE1BQU0sa0JBQWtCLENBQUMsYUFBYSxDQUFDO1lBQ3BELE1BQU0sRUFBRSxZQUFZO1NBQ3JCLENBQUMsQ0FBQztRQUNILE1BQU0sTUFBTSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTG9jYWxHcmFwaHFsRm9ybUdlbmVyYXRvciB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9mb3JtLWdlbmVyYXRvcic7XG5pbXBvcnQgeyBjcmVhdGVHcmFwaHFsRG9jdW1lbnRHZW5lcmF0b3IgfSBmcm9tICdAYXdzLWFtcGxpZnkvbW9kZWwtZ2VuZXJhdG9yJztcbmltcG9ydCB7IERlcGxveWVkQmFja2VuZElkZW50aWZpZXIgfSBmcm9tICdAYXdzLWFtcGxpZnkvZGVwbG95ZWQtYmFja2VuZC1jbGllbnQnO1xuaW1wb3J0IHsgQXdzQ3JlZGVudGlhbElkZW50aXR5UHJvdmlkZXIgfSBmcm9tICdAYXdzLXNkay90eXBlcyc7XG5cbnR5cGUgRm9ybUdlbmVyYXRpb25QYXJhbXMgPSB7XG4gIG1vZGVsc091dERpcjogc3RyaW5nO1xuICB1aU91dERpcjogc3RyaW5nO1xuICBhcGlVcmw6IHN0cmluZztcbiAgYmFja2VuZElkZW50aWZpZXI6IERlcGxveWVkQmFja2VuZElkZW50aWZpZXI7XG4gIG1vZGVsc0ZpbHRlcj86IHN0cmluZ1tdO1xufTtcbnR5cGUgRm9ybUdlbmVyYXRpb25JbnN0YW5jZU9wdGlvbnMgPSB7XG4gIGNyZWRlbnRpYWxQcm92aWRlcjogQXdzQ3JlZGVudGlhbElkZW50aXR5UHJvdmlkZXI7XG59O1xuLyoqXG4gKiBDcmVhdGVzIGEgaGFuZGxlciBmb3IgRm9ybUdlbmVyYXRpb25cbiAqL1xuZXhwb3J0IGNsYXNzIEZvcm1HZW5lcmF0aW9uSGFuZGxlciB7XG4gIC8qKlxuICAgKiBJbnN0YW50aWF0ZXMgdGhlIGhhbmRsZXJcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZm9ybUdlblBhcmFtczogRm9ybUdlbmVyYXRpb25JbnN0YW5jZU9wdGlvbnMpIHt9XG4gIGdlbmVyYXRlID0gYXN5bmMgKHBhcmFtczogRm9ybUdlbmVyYXRpb25QYXJhbXMpID0+IHtcbiAgICBjb25zdCB7IGJhY2tlbmRJZGVudGlmaWVyLCBtb2RlbHNPdXREaXIsIHVpT3V0RGlyLCBhcGlVcmwsIG1vZGVsc0ZpbHRlciB9ID1cbiAgICAgIHBhcmFtcztcbiAgICBjb25zdCB7IGNyZWRlbnRpYWxQcm92aWRlciB9ID0gdGhpcy5mb3JtR2VuUGFyYW1zO1xuICAgIGNvbnN0IGdyYXBocWxDbGllbnRHZW5lcmF0b3IgPSBjcmVhdGVHcmFwaHFsRG9jdW1lbnRHZW5lcmF0b3Ioe1xuICAgICAgYmFja2VuZElkZW50aWZpZXIsXG4gICAgICBjcmVkZW50aWFsUHJvdmlkZXIsXG4gICAgfSk7XG4gICAgY29uc3QgbW9kZWxzUmVzdWx0ID0gYXdhaXQgZ3JhcGhxbENsaWVudEdlbmVyYXRvci5nZW5lcmF0ZU1vZGVscyh7XG4gICAgICBsYW5ndWFnZTogJ3R5cGVzY3JpcHQnLFxuICAgIH0pO1xuICAgIGF3YWl0IG1vZGVsc1Jlc3VsdC53cml0ZVRvRGlyZWN0b3J5KG1vZGVsc091dERpcik7XG4gICAgY29uc3QgbG9jYWxGb3JtR2VuZXJhdG9yID0gY3JlYXRlTG9jYWxHcmFwaHFsRm9ybUdlbmVyYXRvcih7XG4gICAgICBpbnRyb3NwZWN0aW9uU2NoZW1hVXJsOiBhcGlVcmwsXG4gICAgICBncmFwaHFsTW9kZWxEaXJlY3RvcnlQYXRoOiAnLi9ncmFwaHFsJyxcbiAgICB9KTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBsb2NhbEZvcm1HZW5lcmF0b3IuZ2VuZXJhdGVGb3Jtcyh7XG4gICAgICBtb2RlbHM6IG1vZGVsc0ZpbHRlcixcbiAgICB9KTtcbiAgICBhd2FpdCByZXN1bHQud3JpdGVUb0RpcmVjdG9yeSh1aU91dERpcik7XG4gIH07XG59XG4iXX0=