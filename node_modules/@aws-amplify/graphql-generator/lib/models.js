"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateModels = void 0;
const graphql_1 = require("graphql");
const appSyncDataStoreCodeGen = __importStar(require("@aws-amplify/appsync-modelgen-plugin"));
const core_1 = require("@graphql-codegen/core");
const { version: packageVersion } = require('../package.json');
async function generateModels(options) {
    const { schema, target, directives, generateIndexRules = true, emitAuthProvider = true, useExperimentalPipelinedTransformer = true, transformerVersion = true, respectPrimaryKeyAttributesOnConnectionField = true, generateModelsForLazyLoadAndCustomSelectionSet = true, addTimestampFields = true, handleListNullabilityTransparently = true, } = options;
    const parsedSchema = (0, graphql_1.parse)(schema);
    const overrideOutputDir = '';
    const appsyncLocalConfig = await appSyncDataStoreCodeGen.preset.buildGeneratesSection({
        schema: parsedSchema,
        baseOutputDir: '',
        config: {
            target,
            directives,
            isTimestampFieldsAdded: addTimestampFields,
            emitAuthProvider,
            generateIndexRules,
            handleListNullabilityTransparently,
            usePipelinedTransformer: useExperimentalPipelinedTransformer,
            transformerVersion,
            respectPrimaryKeyAttributesOnConnectionField,
            generateModelsForLazyLoadAndCustomSelectionSet,
            codegenVersion: packageVersion,
            overrideOutputDir,
        },
        presetConfig: {
            overrideOutputDir,
            target,
        },
        plugins: [
            {
                appSyncLocalCodeGen: {},
            },
        ],
        pluginMap: {
            appSyncLocalCodeGen: appSyncDataStoreCodeGen,
        },
        documents: [],
    });
    return Promise.all(appsyncLocalConfig.map(async (config) => {
        const content = await (0, core_1.codegen)(config);
        return { [config.filename]: content };
    })).then((outputs) => outputs.reduce((curr, next) => ({ ...curr, ...next }), {}));
}
exports.generateModels = generateModels;
//# sourceMappingURL=models.js.map