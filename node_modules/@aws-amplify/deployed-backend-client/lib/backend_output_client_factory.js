import { DefaultBackendOutputClient } from './backend_output_client.js';
import { CloudFormationClient } from '@aws-sdk/client-cloudformation';
import { AmplifyClient } from '@aws-sdk/client-amplify';
export var BackendOutputClientErrorType;
(function (BackendOutputClientErrorType) {
    BackendOutputClientErrorType["METADATA_RETRIEVAL_ERROR"] = "MetadataRetrievalError";
})(BackendOutputClientErrorType || (BackendOutputClientErrorType = {}));
/**
 * Error type for BackendOutputClientError
 */
export class BackendOutputClientError extends Error {
    code;
    /**
     * Constructor for BackendOutputClientError
     */
    constructor(code, message, options) {
        super(message, options);
        this.code = code;
    }
}
/**
 * Factory to create a backend metadata reader
 */
export class BackendOutputClientFactory {
    /**
     * Returns a single instance of BackendOutputClient
     */
    static getInstance = (options) => {
        if ('cloudFormationClient' in options && 'amplifyClient' in options) {
            return new DefaultBackendOutputClient(options.cloudFormationClient, options.amplifyClient);
        }
        return new DefaultBackendOutputClient(new CloudFormationClient(options.credentials), new AmplifyClient(options.credentials));
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2VuZF9vdXRwdXRfY2xpZW50X2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYmFja2VuZF9vdXRwdXRfY2xpZW50X2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFeEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRXhELE1BQU0sQ0FBTixJQUFZLDRCQUVYO0FBRkQsV0FBWSw0QkFBNEI7SUFDdEMsbUZBQW1ELENBQUE7QUFDckQsQ0FBQyxFQUZXLDRCQUE0QixLQUE1Qiw0QkFBNEIsUUFFdkM7QUFDRDs7R0FFRztBQUNILE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxLQUFLO0lBQzFDLElBQUksQ0FBK0I7SUFFMUM7O09BRUc7SUFDSCxZQUNFLElBQWtDLEVBQ2xDLE9BQWUsRUFDZixPQUFzQjtRQUV0QixLQUFLLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQXVCRDs7R0FFRztBQUNILE1BQU0sT0FBTywwQkFBMEI7SUFDckM7O09BRUc7SUFDSCxNQUFNLENBQUMsV0FBVyxHQUFHLENBQ25CLE9BQTBDLEVBQ3JCLEVBQUU7UUFDdkIsSUFBSSxzQkFBc0IsSUFBSSxPQUFPLElBQUksZUFBZSxJQUFJLE9BQU8sRUFBRTtZQUNuRSxPQUFPLElBQUksMEJBQTBCLENBQ25DLE9BQU8sQ0FBQyxvQkFBb0IsRUFDNUIsT0FBTyxDQUFDLGFBQWEsQ0FDdEIsQ0FBQztTQUNIO1FBQ0QsT0FBTyxJQUFJLDBCQUEwQixDQUNuQyxJQUFJLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFDN0MsSUFBSSxhQUFhLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUN2QyxDQUFDO0lBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXdzQ3JlZGVudGlhbElkZW50aXR5UHJvdmlkZXIgfSBmcm9tICdAYXdzLXNkay90eXBlcyc7XG5pbXBvcnQgeyBEZXBsb3llZEJhY2tlbmRJZGVudGlmaWVyIH0gZnJvbSAnLi9pbmRleC5qcyc7XG5pbXBvcnQgeyBEZWZhdWx0QmFja2VuZE91dHB1dENsaWVudCB9IGZyb20gJy4vYmFja2VuZF9vdXRwdXRfY2xpZW50LmpzJztcbmltcG9ydCB7IFVuaWZpZWRCYWNrZW5kT3V0cHV0IH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2JhY2tlbmQtb3V0cHV0LXNjaGVtYXMnO1xuaW1wb3J0IHsgQ2xvdWRGb3JtYXRpb25DbGllbnQgfSBmcm9tICdAYXdzLXNkay9jbGllbnQtY2xvdWRmb3JtYXRpb24nO1xuaW1wb3J0IHsgQW1wbGlmeUNsaWVudCB9IGZyb20gJ0Bhd3Mtc2RrL2NsaWVudC1hbXBsaWZ5JztcblxuZXhwb3J0IGVudW0gQmFja2VuZE91dHB1dENsaWVudEVycm9yVHlwZSB7XG4gIE1FVEFEQVRBX1JFVFJJRVZBTF9FUlJPUiA9ICdNZXRhZGF0YVJldHJpZXZhbEVycm9yJyxcbn1cbi8qKlxuICogRXJyb3IgdHlwZSBmb3IgQmFja2VuZE91dHB1dENsaWVudEVycm9yXG4gKi9cbmV4cG9ydCBjbGFzcyBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIHB1YmxpYyBjb2RlOiBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3JUeXBlO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RvciBmb3IgQmFja2VuZE91dHB1dENsaWVudEVycm9yXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBjb2RlOiBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3JUeXBlLFxuICAgIG1lc3NhZ2U6IHN0cmluZyxcbiAgICBvcHRpb25zPzogRXJyb3JPcHRpb25zXG4gICkge1xuICAgIHN1cGVyKG1lc3NhZ2UsIG9wdGlvbnMpO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gIH1cbn1cblxuLyoqXG4gKiBEZWZpbmVzIEJhY2tlbmRPdXRwdXRDbGllbnRcbiAqL1xuZXhwb3J0IHR5cGUgQmFja2VuZE91dHB1dENsaWVudCA9IHtcbiAgcmVhZG9ubHkgZ2V0T3V0cHV0OiAoXG4gICAgYmFja2VuZElkZW50aWZpZXI6IERlcGxveWVkQmFja2VuZElkZW50aWZpZXJcbiAgKSA9PiBQcm9taXNlPFVuaWZpZWRCYWNrZW5kT3V0cHV0Pjtcbn07XG5cbmV4cG9ydCB0eXBlIEJhY2tlbmRPdXRwdXRDbGllbnRPcHRpb25zID0ge1xuICBjbG91ZEZvcm1hdGlvbkNsaWVudDogQ2xvdWRGb3JtYXRpb25DbGllbnQ7XG4gIGFtcGxpZnlDbGllbnQ6IEFtcGxpZnlDbGllbnQ7XG59O1xuXG5leHBvcnQgdHlwZSBCYWNrZW5kT3V0cHV0Q3JlZGVudGlhbHNPcHRpb25zID0ge1xuICBjcmVkZW50aWFsczogQXdzQ3JlZGVudGlhbElkZW50aXR5UHJvdmlkZXI7XG59O1xuXG5leHBvcnQgdHlwZSBCYWNrZW5kT3V0cHV0Q2xpZW50RmFjdG9yeU9wdGlvbnMgPVxuICB8IEJhY2tlbmRPdXRwdXRDbGllbnRPcHRpb25zXG4gIHwgQmFja2VuZE91dHB1dENyZWRlbnRpYWxzT3B0aW9ucztcbi8qKlxuICogRmFjdG9yeSB0byBjcmVhdGUgYSBiYWNrZW5kIG1ldGFkYXRhIHJlYWRlclxuICovXG5leHBvcnQgY2xhc3MgQmFja2VuZE91dHB1dENsaWVudEZhY3Rvcnkge1xuICAvKipcbiAgICogUmV0dXJucyBhIHNpbmdsZSBpbnN0YW5jZSBvZiBCYWNrZW5kT3V0cHV0Q2xpZW50XG4gICAqL1xuICBzdGF0aWMgZ2V0SW5zdGFuY2UgPSAoXG4gICAgb3B0aW9uczogQmFja2VuZE91dHB1dENsaWVudEZhY3RvcnlPcHRpb25zXG4gICk6IEJhY2tlbmRPdXRwdXRDbGllbnQgPT4ge1xuICAgIGlmICgnY2xvdWRGb3JtYXRpb25DbGllbnQnIGluIG9wdGlvbnMgJiYgJ2FtcGxpZnlDbGllbnQnIGluIG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiBuZXcgRGVmYXVsdEJhY2tlbmRPdXRwdXRDbGllbnQoXG4gICAgICAgIG9wdGlvbnMuY2xvdWRGb3JtYXRpb25DbGllbnQsXG4gICAgICAgIG9wdGlvbnMuYW1wbGlmeUNsaWVudFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEZWZhdWx0QmFja2VuZE91dHB1dENsaWVudChcbiAgICAgIG5ldyBDbG91ZEZvcm1hdGlvbkNsaWVudChvcHRpb25zLmNyZWRlbnRpYWxzKSxcbiAgICAgIG5ldyBBbXBsaWZ5Q2xpZW50KG9wdGlvbnMuY3JlZGVudGlhbHMpXG4gICAgKTtcbiAgfTtcbn1cbiJdfQ==