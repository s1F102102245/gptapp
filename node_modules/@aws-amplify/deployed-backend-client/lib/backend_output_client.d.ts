import { AmplifyClient } from '@aws-sdk/client-amplify';
import { CloudFormationClient } from '@aws-sdk/client-cloudformation';
import { DeployedBackendIdentifier } from './index.js';
import { BackendOutputClient } from './backend_output_client_factory.js';
/**
 * Simplifies the retrieval of all backend output values
 */
export declare class DefaultBackendOutputClient implements BackendOutputClient {
    private cloudFormationClient;
    private amplifyClient;
    /**
     * Instantiates a BackendOutputClient
     */
    constructor(cloudFormationClient: CloudFormationClient, amplifyClient: AmplifyClient);
    getOutput: (backendIdentifier: DeployedBackendIdentifier) => Promise<{
        "AWS::Amplify::Platform"?: {
            version: "1";
            payload: {
                deploymentType: string;
                region: string;
            };
        } | undefined;
        "AWS::Amplify::Auth"?: {
            version: "1";
            payload: {
                authRegion: string;
                userPoolId: string;
                webClientId: string;
                identityPoolId: string;
                amazonClientId?: string | undefined;
                appleClientId?: string | undefined;
                facebookClientId?: string | undefined;
                googleClientId?: string | undefined;
                usernameAttributes?: string | undefined;
                signupAttributes?: string | undefined;
                passwordPolicyMinLength?: string | undefined;
                passwordPolicyRequirements?: string | undefined;
                mfaConfiguration?: string | undefined;
                mfaTypes?: string | undefined;
                verificationMechanisms?: string | undefined;
            };
        } | undefined;
        "AWS::Amplify::GraphQL"?: {
            version: "1";
            payload: {
                awsAppsyncRegion: string;
                awsAppsyncApiEndpoint: string;
                awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
                awsAppsyncApiId: string;
                amplifyApiModelSchemaS3Uri: string;
                awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
                awsAppsyncConflictResolutionMode?: string | undefined;
                awsAppsyncApiKey?: string | undefined;
            };
        } | undefined;
        "AWS::Amplify::Storage"?: {
            version: "1";
            payload: {
                bucketName: string;
                storageRegion: string;
            };
        } | undefined;
    }>;
}
//# sourceMappingURL=backend_output_client.d.ts.map