import { BackendDeployer, DeployProps, DeployResult, DestroyProps, DestroyResult } from './cdk_deployer_singleton_factory.js';
import { CdkErrorMapper } from './cdk_error_mapper.js';
import { BackendIdentifier } from '@aws-amplify/plugin-types';
import { BackendLocator } from '@aws-amplify/platform-core';
/**
 * Invokes CDK command via execa
 */
export declare class CDKDeployer implements BackendDeployer {
    private readonly cdkErrorMapper;
    private readonly backendLocator;
    /**
     * Instantiates instance of CDKDeployer
     */
    constructor(cdkErrorMapper: CdkErrorMapper, backendLocator: BackendLocator);
    /**
     * Invokes cdk deploy command
     */
    deploy: (backendId?: BackendIdentifier, deployProps?: DeployProps) => Promise<DeployResult | DestroyResult>;
    /**
     * Invokes cdk destroy command
     */
    destroy: (backendId?: BackendIdentifier, destroyProps?: DestroyProps) => Promise<DeployResult | DestroyResult>;
    private invokeTsc;
    /**
     * Executes a CDK command
     */
    private invokeCdk;
    /**
     * Wrapper for the child process executor. Helps in unit testing as node:test framework
     * doesn't have capabilities to mock exported functions like `execa` as of right now.
     */
    executeChildProcess: (command: string, commandArgs: string[], options?: {
        printStdout: boolean;
    }) => Promise<{
        deploymentTimes: {};
    }>;
    private populateCDKOutputFromStdout;
}
//# sourceMappingURL=cdk_deployer.d.ts.map