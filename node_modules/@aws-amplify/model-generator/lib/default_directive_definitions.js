export const defaultDirectiveDefinitions = `
directive @aws_subscribe(mutations: [String!]!) on FIELD_DEFINITION

directive @aws_auth(cognito_groups: [String!]!) on FIELD_DEFINITION

directive @aws_api_key on FIELD_DEFINITION | OBJECT

directive @aws_iam on FIELD_DEFINITION | OBJECT

directive @aws_oidc on FIELD_DEFINITION | OBJECT

directive @aws_cognito_user_pools(cognito_groups: [String!]) on FIELD_DEFINITION | OBJECT

directive @aws_lambda on FIELD_DEFINITION | OBJECT

directive @deprecated(reason: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION | ENUM | ENUM_VALUE

directive @model(queries: ModelQueryMap, mutations: ModelMutationMap, subscriptions: ModelSubscriptionMap, timestamps: TimestampConfiguration) on OBJECT
input ModelMutationMap {
  create: String
  update: String
  delete: String
}
input ModelQueryMap {
  get: String
  list: String
}
input ModelSubscriptionMap {
  onCreate: [String]
  onUpdate: [String]
  onDelete: [String]
  level: ModelSubscriptionLevel
}
enum ModelSubscriptionLevel {
  off
  public
  on
}
input TimestampConfiguration {
  createdAt: String
  updatedAt: String
}
directive @function(name: String!, region: String, accountId: String) repeatable on FIELD_DEFINITION
directive @http(method: HttpMethod = GET, url: String!, headers: [HttpHeader] = []) on FIELD_DEFINITION
enum HttpMethod {
  GET
  POST
  PUT
  DELETE
  PATCH
}
input HttpHeader {
  key: String
  value: String
}
directive @predictions(actions: [PredictionsActions!]!) on FIELD_DEFINITION
enum PredictionsActions {
  identifyText
  identifyLabels
  convertTextToSpeech
  translateText
}
directive @primaryKey(sortKeyFields: [String]) on FIELD_DEFINITION
directive @index(name: String, sortKeyFields: [String], queryField: String) repeatable on FIELD_DEFINITION
directive @hasMany(indexName: String, fields: [String!], limit: Int = 100) on FIELD_DEFINITION
directive @hasOne(fields: [String!]) on FIELD_DEFINITION
directive @manyToMany(relationName: String!, limit: Int = 100) on FIELD_DEFINITION
directive @belongsTo(fields: [String!]) on FIELD_DEFINITION
directive @default(value: String!) on FIELD_DEFINITION
directive @auth(rules: [AuthRule!]!) on OBJECT | FIELD_DEFINITION
input AuthRule {
  allow: AuthStrategy!
  provider: AuthProvider
  identityClaim: String
  groupClaim: String
  ownerField: String
  groupsField: String
  groups: [String]
  operations: [ModelOperation]
}
enum AuthStrategy {
  owner
  groups
  private
  public
  custom
}
enum AuthProvider {
  apiKey
  iam
  oidc
  userPools
  function
}
enum ModelOperation {
  create
  update
  delete
  read
  list
  get
  sync
  listen
  search
}
directive @mapsTo(name: String!) on OBJECT
directive @searchable(queries: SearchableQueryMap) on OBJECT
input SearchableQueryMap {
  search: String
}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdF9kaXJlY3RpdmVfZGVmaW5pdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZGVmYXVsdF9kaXJlY3RpdmVfZGVmaW5pdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBOEcxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHREaXJlY3RpdmVEZWZpbml0aW9ucyA9IGBcbmRpcmVjdGl2ZSBAYXdzX3N1YnNjcmliZShtdXRhdGlvbnM6IFtTdHJpbmchXSEpIG9uIEZJRUxEX0RFRklOSVRJT05cblxuZGlyZWN0aXZlIEBhd3NfYXV0aChjb2duaXRvX2dyb3VwczogW1N0cmluZyFdISkgb24gRklFTERfREVGSU5JVElPTlxuXG5kaXJlY3RpdmUgQGF3c19hcGlfa2V5IG9uIEZJRUxEX0RFRklOSVRJT04gfCBPQkpFQ1RcblxuZGlyZWN0aXZlIEBhd3NfaWFtIG9uIEZJRUxEX0RFRklOSVRJT04gfCBPQkpFQ1RcblxuZGlyZWN0aXZlIEBhd3Nfb2lkYyBvbiBGSUVMRF9ERUZJTklUSU9OIHwgT0JKRUNUXG5cbmRpcmVjdGl2ZSBAYXdzX2NvZ25pdG9fdXNlcl9wb29scyhjb2duaXRvX2dyb3VwczogW1N0cmluZyFdKSBvbiBGSUVMRF9ERUZJTklUSU9OIHwgT0JKRUNUXG5cbmRpcmVjdGl2ZSBAYXdzX2xhbWJkYSBvbiBGSUVMRF9ERUZJTklUSU9OIHwgT0JKRUNUXG5cbmRpcmVjdGl2ZSBAZGVwcmVjYXRlZChyZWFzb246IFN0cmluZykgb24gRklFTERfREVGSU5JVElPTiB8IElOUFVUX0ZJRUxEX0RFRklOSVRJT04gfCBFTlVNIHwgRU5VTV9WQUxVRVxuXG5kaXJlY3RpdmUgQG1vZGVsKHF1ZXJpZXM6IE1vZGVsUXVlcnlNYXAsIG11dGF0aW9uczogTW9kZWxNdXRhdGlvbk1hcCwgc3Vic2NyaXB0aW9uczogTW9kZWxTdWJzY3JpcHRpb25NYXAsIHRpbWVzdGFtcHM6IFRpbWVzdGFtcENvbmZpZ3VyYXRpb24pIG9uIE9CSkVDVFxuaW5wdXQgTW9kZWxNdXRhdGlvbk1hcCB7XG4gIGNyZWF0ZTogU3RyaW5nXG4gIHVwZGF0ZTogU3RyaW5nXG4gIGRlbGV0ZTogU3RyaW5nXG59XG5pbnB1dCBNb2RlbFF1ZXJ5TWFwIHtcbiAgZ2V0OiBTdHJpbmdcbiAgbGlzdDogU3RyaW5nXG59XG5pbnB1dCBNb2RlbFN1YnNjcmlwdGlvbk1hcCB7XG4gIG9uQ3JlYXRlOiBbU3RyaW5nXVxuICBvblVwZGF0ZTogW1N0cmluZ11cbiAgb25EZWxldGU6IFtTdHJpbmddXG4gIGxldmVsOiBNb2RlbFN1YnNjcmlwdGlvbkxldmVsXG59XG5lbnVtIE1vZGVsU3Vic2NyaXB0aW9uTGV2ZWwge1xuICBvZmZcbiAgcHVibGljXG4gIG9uXG59XG5pbnB1dCBUaW1lc3RhbXBDb25maWd1cmF0aW9uIHtcbiAgY3JlYXRlZEF0OiBTdHJpbmdcbiAgdXBkYXRlZEF0OiBTdHJpbmdcbn1cbmRpcmVjdGl2ZSBAZnVuY3Rpb24obmFtZTogU3RyaW5nISwgcmVnaW9uOiBTdHJpbmcsIGFjY291bnRJZDogU3RyaW5nKSByZXBlYXRhYmxlIG9uIEZJRUxEX0RFRklOSVRJT05cbmRpcmVjdGl2ZSBAaHR0cChtZXRob2Q6IEh0dHBNZXRob2QgPSBHRVQsIHVybDogU3RyaW5nISwgaGVhZGVyczogW0h0dHBIZWFkZXJdID0gW10pIG9uIEZJRUxEX0RFRklOSVRJT05cbmVudW0gSHR0cE1ldGhvZCB7XG4gIEdFVFxuICBQT1NUXG4gIFBVVFxuICBERUxFVEVcbiAgUEFUQ0hcbn1cbmlucHV0IEh0dHBIZWFkZXIge1xuICBrZXk6IFN0cmluZ1xuICB2YWx1ZTogU3RyaW5nXG59XG5kaXJlY3RpdmUgQHByZWRpY3Rpb25zKGFjdGlvbnM6IFtQcmVkaWN0aW9uc0FjdGlvbnMhXSEpIG9uIEZJRUxEX0RFRklOSVRJT05cbmVudW0gUHJlZGljdGlvbnNBY3Rpb25zIHtcbiAgaWRlbnRpZnlUZXh0XG4gIGlkZW50aWZ5TGFiZWxzXG4gIGNvbnZlcnRUZXh0VG9TcGVlY2hcbiAgdHJhbnNsYXRlVGV4dFxufVxuZGlyZWN0aXZlIEBwcmltYXJ5S2V5KHNvcnRLZXlGaWVsZHM6IFtTdHJpbmddKSBvbiBGSUVMRF9ERUZJTklUSU9OXG5kaXJlY3RpdmUgQGluZGV4KG5hbWU6IFN0cmluZywgc29ydEtleUZpZWxkczogW1N0cmluZ10sIHF1ZXJ5RmllbGQ6IFN0cmluZykgcmVwZWF0YWJsZSBvbiBGSUVMRF9ERUZJTklUSU9OXG5kaXJlY3RpdmUgQGhhc01hbnkoaW5kZXhOYW1lOiBTdHJpbmcsIGZpZWxkczogW1N0cmluZyFdLCBsaW1pdDogSW50ID0gMTAwKSBvbiBGSUVMRF9ERUZJTklUSU9OXG5kaXJlY3RpdmUgQGhhc09uZShmaWVsZHM6IFtTdHJpbmchXSkgb24gRklFTERfREVGSU5JVElPTlxuZGlyZWN0aXZlIEBtYW55VG9NYW55KHJlbGF0aW9uTmFtZTogU3RyaW5nISwgbGltaXQ6IEludCA9IDEwMCkgb24gRklFTERfREVGSU5JVElPTlxuZGlyZWN0aXZlIEBiZWxvbmdzVG8oZmllbGRzOiBbU3RyaW5nIV0pIG9uIEZJRUxEX0RFRklOSVRJT05cbmRpcmVjdGl2ZSBAZGVmYXVsdCh2YWx1ZTogU3RyaW5nISkgb24gRklFTERfREVGSU5JVElPTlxuZGlyZWN0aXZlIEBhdXRoKHJ1bGVzOiBbQXV0aFJ1bGUhXSEpIG9uIE9CSkVDVCB8IEZJRUxEX0RFRklOSVRJT05cbmlucHV0IEF1dGhSdWxlIHtcbiAgYWxsb3c6IEF1dGhTdHJhdGVneSFcbiAgcHJvdmlkZXI6IEF1dGhQcm92aWRlclxuICBpZGVudGl0eUNsYWltOiBTdHJpbmdcbiAgZ3JvdXBDbGFpbTogU3RyaW5nXG4gIG93bmVyRmllbGQ6IFN0cmluZ1xuICBncm91cHNGaWVsZDogU3RyaW5nXG4gIGdyb3VwczogW1N0cmluZ11cbiAgb3BlcmF0aW9uczogW01vZGVsT3BlcmF0aW9uXVxufVxuZW51bSBBdXRoU3RyYXRlZ3kge1xuICBvd25lclxuICBncm91cHNcbiAgcHJpdmF0ZVxuICBwdWJsaWNcbiAgY3VzdG9tXG59XG5lbnVtIEF1dGhQcm92aWRlciB7XG4gIGFwaUtleVxuICBpYW1cbiAgb2lkY1xuICB1c2VyUG9vbHNcbiAgZnVuY3Rpb25cbn1cbmVudW0gTW9kZWxPcGVyYXRpb24ge1xuICBjcmVhdGVcbiAgdXBkYXRlXG4gIGRlbGV0ZVxuICByZWFkXG4gIGxpc3RcbiAgZ2V0XG4gIHN5bmNcbiAgbGlzdGVuXG4gIHNlYXJjaFxufVxuZGlyZWN0aXZlIEBtYXBzVG8obmFtZTogU3RyaW5nISkgb24gT0JKRUNUXG5kaXJlY3RpdmUgQHNlYXJjaGFibGUocXVlcmllczogU2VhcmNoYWJsZVF1ZXJ5TWFwKSBvbiBPQkpFQ1RcbmlucHV0IFNlYXJjaGFibGVRdWVyeU1hcCB7XG4gIHNlYXJjaDogU3RyaW5nXG59XG5gO1xuIl19