"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULTS = void 0;
/**
 * These are the Amplify provided default values for Auth.
 */
exports.DEFAULTS = {
    /**
     * Default Auth Props if customer does not provide any.
     */
    IF_NO_PROPS_PROVIDED: { loginWith: { email: true } },
    /**
     * Sign in case sensitivity
     */
    SIGN_IN_CASE_SENSITIVE: false,
    /**
     * Specifies if users can sign up on their own.
     * If set to false, users will not be able to register, and will require an admin to create
     * their account.
     */
    ALLOW_SELF_SIGN_UP: true,
    /**
     * Specifies whether the identity pool should support unauthenticated identities
     */
    ALLOW_UNAUTHENTICATED_IDENTITIES: true,
    /**
     * Specifies whether user existence errors should be shown.
     * Enabling this protects users as it does not allow attackers to know if users
     * are created in the backend.
     */
    PREVENT_USER_EXISTENCE_ERRORS: true,
    /**
     * Default password policy
     */
    PASSWORD_POLICY: {
        minLength: 8,
        requireLowercase: true,
        requireUppercase: true,
        requireDigits: true,
        requireSymbols: true,
    },
    /**
     * Specifies if SRP or custom logins should be enabled.
     */
    AUTH_FLOWS: {
        userSrp: true,
        custom: true,
    },
    /**
     * Specifies if attributes are required for signup/login, may depend on which settings are enabled.
     */
    IS_REQUIRED_ATTRIBUTE: {
        email: (emailEnabled) => emailEnabled ? { required: true, mutable: true } : undefined,
        phoneNumber: (phoneNumberEnabled) => phoneNumberEnabled ? { required: true, mutable: true } : undefined,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZGVmYXVsdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUE7O0dBRUc7QUFDVSxRQUFBLFFBQVEsR0FBRztJQUN0Qjs7T0FFRztJQUNILG9CQUFvQixFQUFFLEVBQUUsU0FBUyxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFlO0lBQ2pFOztPQUVHO0lBQ0gsc0JBQXNCLEVBQUUsS0FBSztJQUM3Qjs7OztPQUlHO0lBQ0gsa0JBQWtCLEVBQUUsSUFBSTtJQUN4Qjs7T0FFRztJQUNILGdDQUFnQyxFQUFFLElBQUk7SUFDdEM7Ozs7T0FJRztJQUNILDZCQUE2QixFQUFFLElBQUk7SUFDbkM7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixTQUFTLEVBQUUsQ0FBQztRQUNaLGdCQUFnQixFQUFFLElBQUk7UUFDdEIsZ0JBQWdCLEVBQUUsSUFBSTtRQUN0QixhQUFhLEVBQUUsSUFBSTtRQUNuQixjQUFjLEVBQUUsSUFBSTtLQUNyQjtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLElBQUk7UUFDYixNQUFNLEVBQUUsSUFBSTtLQUNiO0lBQ0Q7O09BRUc7SUFDSCxxQkFBcUIsRUFBRTtRQUNyQixLQUFLLEVBQUUsQ0FBQyxZQUFxQixFQUFFLEVBQUUsQ0FDL0IsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQzlELFdBQVcsRUFBRSxDQUFDLGtCQUEyQixFQUFFLEVBQUUsQ0FDM0Msa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVM7S0FDckU7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXV0aFByb3BzIH0gZnJvbSAnLi90eXBlcy5qcyc7XG5cbi8qKlxuICogVGhlc2UgYXJlIHRoZSBBbXBsaWZ5IHByb3ZpZGVkIGRlZmF1bHQgdmFsdWVzIGZvciBBdXRoLlxuICovXG5leHBvcnQgY29uc3QgREVGQVVMVFMgPSB7XG4gIC8qKlxuICAgKiBEZWZhdWx0IEF1dGggUHJvcHMgaWYgY3VzdG9tZXIgZG9lcyBub3QgcHJvdmlkZSBhbnkuXG4gICAqL1xuICBJRl9OT19QUk9QU19QUk9WSURFRDogeyBsb2dpbldpdGg6IHsgZW1haWw6IHRydWUgfSB9IGFzIEF1dGhQcm9wcyxcbiAgLyoqXG4gICAqIFNpZ24gaW4gY2FzZSBzZW5zaXRpdml0eVxuICAgKi9cbiAgU0lHTl9JTl9DQVNFX1NFTlNJVElWRTogZmFsc2UsXG4gIC8qKlxuICAgKiBTcGVjaWZpZXMgaWYgdXNlcnMgY2FuIHNpZ24gdXAgb24gdGhlaXIgb3duLlxuICAgKiBJZiBzZXQgdG8gZmFsc2UsIHVzZXJzIHdpbGwgbm90IGJlIGFibGUgdG8gcmVnaXN0ZXIsIGFuZCB3aWxsIHJlcXVpcmUgYW4gYWRtaW4gdG8gY3JlYXRlXG4gICAqIHRoZWlyIGFjY291bnQuXG4gICAqL1xuICBBTExPV19TRUxGX1NJR05fVVA6IHRydWUsXG4gIC8qKlxuICAgKiBTcGVjaWZpZXMgd2hldGhlciB0aGUgaWRlbnRpdHkgcG9vbCBzaG91bGQgc3VwcG9ydCB1bmF1dGhlbnRpY2F0ZWQgaWRlbnRpdGllc1xuICAgKi9cbiAgQUxMT1dfVU5BVVRIRU5USUNBVEVEX0lERU5USVRJRVM6IHRydWUsXG4gIC8qKlxuICAgKiBTcGVjaWZpZXMgd2hldGhlciB1c2VyIGV4aXN0ZW5jZSBlcnJvcnMgc2hvdWxkIGJlIHNob3duLlxuICAgKiBFbmFibGluZyB0aGlzIHByb3RlY3RzIHVzZXJzIGFzIGl0IGRvZXMgbm90IGFsbG93IGF0dGFja2VycyB0byBrbm93IGlmIHVzZXJzXG4gICAqIGFyZSBjcmVhdGVkIGluIHRoZSBiYWNrZW5kLlxuICAgKi9cbiAgUFJFVkVOVF9VU0VSX0VYSVNURU5DRV9FUlJPUlM6IHRydWUsXG4gIC8qKlxuICAgKiBEZWZhdWx0IHBhc3N3b3JkIHBvbGljeVxuICAgKi9cbiAgUEFTU1dPUkRfUE9MSUNZOiB7XG4gICAgbWluTGVuZ3RoOiA4LFxuICAgIHJlcXVpcmVMb3dlcmNhc2U6IHRydWUsXG4gICAgcmVxdWlyZVVwcGVyY2FzZTogdHJ1ZSxcbiAgICByZXF1aXJlRGlnaXRzOiB0cnVlLFxuICAgIHJlcXVpcmVTeW1ib2xzOiB0cnVlLFxuICB9LFxuICAvKipcbiAgICogU3BlY2lmaWVzIGlmIFNSUCBvciBjdXN0b20gbG9naW5zIHNob3VsZCBiZSBlbmFibGVkLlxuICAgKi9cbiAgQVVUSF9GTE9XUzoge1xuICAgIHVzZXJTcnA6IHRydWUsXG4gICAgY3VzdG9tOiB0cnVlLFxuICB9LFxuICAvKipcbiAgICogU3BlY2lmaWVzIGlmIGF0dHJpYnV0ZXMgYXJlIHJlcXVpcmVkIGZvciBzaWdudXAvbG9naW4sIG1heSBkZXBlbmQgb24gd2hpY2ggc2V0dGluZ3MgYXJlIGVuYWJsZWQuXG4gICAqL1xuICBJU19SRVFVSVJFRF9BVFRSSUJVVEU6IHtcbiAgICBlbWFpbDogKGVtYWlsRW5hYmxlZDogYm9vbGVhbikgPT5cbiAgICAgIGVtYWlsRW5hYmxlZCA/IHsgcmVxdWlyZWQ6IHRydWUsIG11dGFibGU6IHRydWUgfSA6IHVuZGVmaW5lZCxcbiAgICBwaG9uZU51bWJlcjogKHBob25lTnVtYmVyRW5hYmxlZDogYm9vbGVhbikgPT5cbiAgICAgIHBob25lTnVtYmVyRW5hYmxlZCA/IHsgcmVxdWlyZWQ6IHRydWUsIG11dGFibGU6IHRydWUgfSA6IHVuZGVmaW5lZCxcbiAgfSxcbn07XG4iXX0=