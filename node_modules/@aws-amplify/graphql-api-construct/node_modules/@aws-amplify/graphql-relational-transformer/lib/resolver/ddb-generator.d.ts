import { TransformerContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { Expression, ObjectNode } from 'graphql-mapping-template';
import { ObjectTypeDefinitionNode } from 'graphql';
import { BelongsToDirectiveConfiguration, HasManyDirectiveConfiguration, HasOneDirectiveConfiguration } from '../types';
import { RelationalResolverGenerator } from './generator';
export declare class DDBRelationalResolverGenerator extends RelationalResolverGenerator {
    makeExpression: (keySchema: any[], connectionAttributes: string[]) => ObjectNode;
    makeHasManyGetItemsConnectionWithKeyResolver: (config: HasManyDirectiveConfiguration, ctx: TransformerContextProvider) => void;
    makeHasOneGetItemConnectionWithKeyResolver: (config: HasOneDirectiveConfiguration | BelongsToDirectiveConfiguration, ctx: TransformerContextProvider) => void;
    buildKeyValueExpression: (fieldName: string, object: ObjectTypeDefinitionNode, isPartitionKey?: boolean) => Expression;
    makeBelongsToGetItemConnectionWithKeyResolver: (config: HasOneDirectiveConfiguration, ctx: TransformerContextProvider) => void;
}
//# sourceMappingURL=ddb-generator.d.ts.map