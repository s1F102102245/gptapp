import { DirectiveWrapper } from '@aws-amplify/graphql-transformer-core';
import { TransformerBeforeStepContextProvider, TransformerContextProvider } from '@aws-amplify/graphql-transformer-interfaces';
import { ObjectTypeDefinitionNode } from 'graphql';
import { Construct } from 'constructs';
import { AuthRule, ConfiguredAuthProviders, GetAuthRulesOptions, RoleDefinition, RolesByProvider } from './definitions';
export * from './constants';
export * from './definitions';
export * from './validations';
export * from './schema';
export * from './iam';
export declare const splitRoles: (roles: Array<RoleDefinition>) => RolesByProvider;
export declare const getAuthDirectiveRules: (authDir: DirectiveWrapper, options?: GetAuthRulesOptions) => AuthRule[];
export declare const getScopeForField: (ctx: TransformerContextProvider, obj: ObjectTypeDefinitionNode, fieldName: string, hasModelDirective: boolean) => Construct;
export declare const getConfiguredAuthProviders: (context: TransformerBeforeStepContextProvider) => ConfiguredAuthProviders;
//# sourceMappingURL=index.d.ts.map