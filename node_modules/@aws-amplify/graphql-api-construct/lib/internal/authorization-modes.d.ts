import { AppSyncAuthConfiguration, SynthParameters } from '@aws-amplify/graphql-transformer-interfaces';
import { CfnGraphQLApi } from 'aws-cdk-lib/aws-appsync';
import { AuthorizationModes } from '../types';
type AuthSynthParameters = Pick<SynthParameters, 'userPoolId' | 'authenticatedUserRoleName' | 'unauthenticatedUserRoleName' | 'identityPoolId' | 'adminRoles'>;
interface AuthConfig {
    /**
     * used mainly in the before step to pass the authConfig from the transformer core down to the directive
     */
    authConfig?: AppSyncAuthConfiguration;
    /**
     * Params to include the transformer.
     */
    authSynthParameters: AuthSynthParameters;
}
/**
 * Transforms additionalAuthenticationTypes for storage in CFN output
 */
export declare const getAdditionalAuthenticationTypes: (cfnGraphqlApi: CfnGraphQLApi) => string | undefined;
/**
 * Convert the list of auth modes into the necessary flags and params (effectively a reducer on the rule list)
 * @param authModes the list of auth modes configured on the API.
 * @returns the AuthConfig which the AuthTransformer needs as input.
 */
export declare const convertAuthorizationModesToTransformerAuthConfig: (authModes: AuthorizationModes) => AuthConfig;
export {};
